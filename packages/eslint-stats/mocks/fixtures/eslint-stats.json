[
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/eslint.config.mjs",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 9.547583 },
            "rules": {
              "for-direction": { "total": 0.027042 },
              "no-async-promise-executor": { "total": 0.008917 },
              "no-case-declarations": { "total": 0.012542 },
              "no-compare-neg-zero": { "total": 0.012 },
              "no-cond-assign": { "total": 0.023416 },
              "no-constant-binary-expression": { "total": 0.010334 },
              "no-constant-condition": { "total": 0.040584 },
              "no-control-regex": { "total": 0.04700000000000001 },
              "no-debugger": { "total": 0.0155 },
              "no-delete-var": { "total": 0.008125 },
              "no-dupe-else-if": { "total": 0.010666 },
              "no-duplicate-case": { "total": 0.008375 },
              "no-empty": { "total": 0.013208 },
              "no-empty-character-class": { "total": 0.007833 },
              "no-empty-pattern": { "total": 0.011708 },
              "no-empty-static-block": { "total": 0.007792 },
              "no-ex-assign": { "total": 0.008375 },
              "no-extra-boolean-cast": { "total": 0.021208 },
              "no-fallthrough": { "total": 0.055625 },
              "no-global-assign": { "total": 0.177001 },
              "no-invalid-regexp": { "total": 0.021333 },
              "no-irregular-whitespace": { "total": 0.064251 },
              "no-loss-of-precision": { "total": 0.033334 },
              "no-misleading-character-class": { "total": 0.18012399999999998 },
              "no-nonoctal-decimal-escape": { "total": 0.09349799999999998 },
              "no-octal": { "total": 0.01604 },
              "no-prototype-builtins": { "total": 0.010083 },
              "no-regex-spaces": { "total": 0.031041 },
              "no-self-assign": { "total": 0.062625 },
              "no-shadow-restricted-names": { "total": 0.049666 },
              "no-sparse-arrays": { "total": 0.03025 },
              "no-unsafe-finally": { "total": 0.01175 },
              "no-unsafe-optional-chaining": { "total": 0.063667 },
              "no-unused-labels": { "total": 0.014292 },
              "no-unused-private-class-members": { "total": 0.033709 },
              "no-useless-backreference": { "total": 0.046501 },
              "no-useless-catch": { "total": 0.004792 },
              "no-useless-escape": { "total": 0.068125 },
              "require-yield": { "total": 0.012083 },
              "use-isnan": { "total": 0.019708 },
              "valid-typeof": { "total": 0.024667 },
              "no-var": { "total": 0.010292 },
              "prefer-const": { "total": 0.044625 },
              "prefer-rest-params": { "total": 0.010375 },
              "prefer-spread": { "total": 0.00575 },
              "@typescript-eslint/ban-ts-comment": {
                "total": 0.11558399999999999
              },
              "@typescript-eslint/no-array-constructor": { "total": 0.011375 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.010166
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.02825 },
              "@typescript-eslint/no-explicit-any": { "total": 0.024833 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.011
              },
              "@typescript-eslint/no-misused-new": { "total": 0.011666 },
              "@typescript-eslint/no-namespace": { "total": 0.016208 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.01025
              },
              "@typescript-eslint/no-this-alias": { "total": 0.015417 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.046709
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.009375
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.014833
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.07 },
              "@typescript-eslint/no-unused-vars": { "total": 2.780667 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.008834
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.011334 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.008583
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.209958
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.00675 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.095166
              },
              "@typescript-eslint/no-empty-function": { "total": 0.038416 },
              "@typescript-eslint/no-inferrable-types": { "total": 0.036542 },
              "@typescript-eslint/no-empty-interface": { "total": 0.01025 }
            },
            "fix": { "total": 0 },
            "total": 22.487417
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/package.json",
    "messages": [
      {
        "ruleId": "@nx/dependency-checks",
        "severity": 2,
        "message": "The \"eslint-stats\" project uses the following packages, but they are missing from \"dependencies\":\n    - vitest",
        "line": 18,
        "column": 3,
        "nodeType": "JSONProperty",
        "messageId": "missingDependency",
        "endLine": 21,
        "endColumn": 4,
        "fix": { "range": [412, 412], "text": ",\n    \"vitest\": \"^3.0.0\"" }
      },
      {
        "ruleId": "@nx/dependency-checks",
        "severity": 2,
        "message": "The version specifier does not contain the installed version of \"yargs\" package: 18.0.0.",
        "line": 20,
        "column": 5,
        "nodeType": "JSONProperty",
        "messageId": "versionMismatch",
        "endLine": 20,
        "endColumn": 23,
        "fix": { "range": [394, 412], "text": "\"yargs\": \"^18.0.0\"" }
      }
    ],
    "suppressedMessages": [],
    "errorCount": 2,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 2,
    "fixableWarningCount": 0,
    "source": "{\n  \"name\": \"@push-based/eslint-stats\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"type\": \"module\",\n  \"bin\": {\n    \"eslint-stats\": \"./eslint-stats.cjs\"\n  },\n  \"main\": \"./index.js\",\n  \"types\": \"./index.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"import\": \"./index.js\",\n      \"require\": \"./index.cjs\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"dependencies\": {\n    \"zod\": \"^3.25.56\",\n    \"yargs\": \"^17.7.2\"\n  },\n  \"devDependencies\": {\n    \"@types/yargs\": \"^17.0.33\"\n  }\n}\n",
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 4.86875 },
            "rules": {
              "@nx/dependency-checks": { "total": 13.288666000000001 }
            },
            "fix": { "total": 0 },
            "total": 19.859042
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/project.json",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 0.660416 },
            "rules": { "@nx/dependency-checks": { "total": 0.02925 } },
            "fix": { "total": 0 },
            "total": 1.744125
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 0.677833 },
            "rules": {
              "for-direction": { "total": 0.001833 },
              "no-async-promise-executor": { "total": 0.001 },
              "no-case-declarations": { "total": 0.000875 },
              "no-compare-neg-zero": { "total": 0.002166 },
              "no-cond-assign": { "total": 0.002458 },
              "no-constant-binary-expression": { "total": 0.001125 },
              "no-constant-condition": { "total": 0.004917 },
              "no-control-regex": { "total": 0.001833 },
              "no-debugger": { "total": 0.000583 },
              "no-delete-var": { "total": 0.000959 },
              "no-dupe-else-if": { "total": 0.0015 },
              "no-duplicate-case": { "total": 0.000875 },
              "no-empty": { "total": 0.0015 },
              "no-empty-character-class": { "total": 0.002625 },
              "no-empty-pattern": { "total": 0.001333 },
              "no-empty-static-block": { "total": 0.000875 },
              "no-ex-assign": { "total": 0.000917 },
              "no-extra-boolean-cast": { "total": 0.0025 },
              "no-fallthrough": { "total": 0.0067079999999999996 },
              "no-global-assign": { "total": 0.075542 },
              "no-invalid-regexp": { "total": 0.0015 },
              "no-irregular-whitespace": { "total": 0.025709 },
              "no-loss-of-precision": { "total": 0.0022919999999999998 },
              "no-misleading-character-class": { "total": 0.103708 },
              "no-nonoctal-decimal-escape": { "total": 0.001999 },
              "no-octal": { "total": 0.001083 },
              "no-prototype-builtins": { "total": 0.001375 },
              "no-regex-spaces": { "total": 0.001833 },
              "no-self-assign": { "total": 0.001167 },
              "no-shadow-restricted-names": { "total": 0.002125 },
              "no-sparse-arrays": { "total": 0.000834 },
              "no-unsafe-finally": { "total": 0.001792 },
              "no-unsafe-optional-chaining": { "total": 0.0045 },
              "no-unused-labels": { "total": 0.001583 },
              "no-unused-private-class-members": { "total": 0.001625 },
              "no-useless-backreference": { "total": 0.0063750000000000005 },
              "no-useless-catch": { "total": 0.000667 },
              "no-useless-escape": { "total": 0.017875000000000002 },
              "require-yield": { "total": 0.001375 },
              "use-isnan": { "total": 0.001833 },
              "valid-typeof": { "total": 0.002749 },
              "no-var": { "total": 0.000959 },
              "prefer-const": { "total": 0.0022919999999999998 },
              "prefer-rest-params": { "total": 0.000917 },
              "prefer-spread": { "total": 0.000709 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.016291 },
              "@typescript-eslint/no-array-constructor": { "total": 0.002375 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.00575
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.004583 },
              "@typescript-eslint/no-explicit-any": { "total": 0.008084 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.002042
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001667 },
              "@typescript-eslint/no-namespace": { "total": 0.003667 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.0015
              },
              "@typescript-eslint/no-this-alias": { "total": 0.004291 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.01325
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.002208
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.001916
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.01525 },
              "@typescript-eslint/no-unused-vars": { "total": 1.764542 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.002125
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.002166 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.00175
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.012874
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.006458 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.004875
              },
              "@typescript-eslint/no-empty-function": { "total": 0.011375 },
              "@typescript-eslint/no-inferrable-types": { "total": 0.005917 },
              "@typescript-eslint/no-empty-interface": { "total": 0.006167 },
              "@nx/enforce-module-boundaries": { "total": 0.535083 }
            },
            "fix": { "total": 0 },
            "total": 4.775542
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/bin/eslint-stats-command.integration.test.ts",
    "messages": [
      {
        "ruleId": "import/no-relative-parent-imports",
        "message": "Definition for rule 'import/no-relative-parent-imports' was not found.",
        "line": 4,
        "column": 1,
        "endLine": 4,
        "endColumn": 62,
        "severity": 2,
        "nodeType": null
      },
      {
        "ruleId": "@nx/enforce-module-boundaries",
        "severity": 2,
        "message": "Buildable libraries cannot import or export from non-buildable libraries",
        "line": 5,
        "column": 1,
        "nodeType": "ImportDeclaration",
        "messageId": "noImportOfNonBuildableLibraries",
        "endLine": 5,
        "endColumn": 83
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'stderr' is never reassigned. Use 'const' instead.",
        "line": 13,
        "column": 19,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 13,
        "endColumn": 25
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'code' is never reassigned. Use 'const' instead.",
        "line": 13,
        "column": 27,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 13,
        "endColumn": 31
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'stderr' is never reassigned. Use 'const' instead.",
        "line": 41,
        "column": 19,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 41,
        "endColumn": 25
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'code' is never reassigned. Use 'const' instead.",
        "line": 41,
        "column": 27,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 41,
        "endColumn": 31
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'stderr' is never reassigned. Use 'const' instead.",
        "line": 69,
        "column": 19,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 69,
        "endColumn": 25
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'code' is never reassigned. Use 'const' instead.",
        "line": 69,
        "column": 27,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 69,
        "endColumn": 31
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'stderr' is never reassigned. Use 'const' instead.",
        "line": 97,
        "column": 19,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 97,
        "endColumn": 25
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'code' is never reassigned. Use 'const' instead.",
        "line": 97,
        "column": 27,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 97,
        "endColumn": 31
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'stderr' is never reassigned. Use 'const' instead.",
        "line": 125,
        "column": 19,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 125,
        "endColumn": 25
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'code' is never reassigned. Use 'const' instead.",
        "line": 125,
        "column": 27,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 125,
        "endColumn": 31
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'stderr' is never reassigned. Use 'const' instead.",
        "line": 153,
        "column": 19,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 153,
        "endColumn": 25
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'code' is never reassigned. Use 'const' instead.",
        "line": 153,
        "column": 27,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 153,
        "endColumn": 31
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'stderr' is never reassigned. Use 'const' instead.",
        "line": 181,
        "column": 19,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 181,
        "endColumn": 25
      },
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'code' is never reassigned. Use 'const' instead.",
        "line": 181,
        "column": 27,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 181,
        "endColumn": 31
      }
    ],
    "suppressedMessages": [],
    "errorCount": 16,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import { describe, expect, it } from 'vitest';\nimport { executeProcess } from '../../execute-process';\nimport { join } from 'path';\n// eslint-disable-next-line import/no-relative-parent-imports\nimport { removeColorCodes } from '../../../../../../testing/utils/src/lib/string';\n\ndescribe('eslint-stats-command', () => {\n  const eslintStatsBinPath =\n    'packages/eslint-stats/src/lib/bin/eslint-stats.ts';\n  const eslintStatsPath = join(process.cwd(), 'eslint-stats.json');\n\n  it('should run demo.ts and log output', async () => {\n    let { stdout, stderr, code } = await executeProcess({\n      command: 'tsx',\n      args: [eslintStatsBinPath, eslintStatsPath],\n    });\n\n    expect(stderr).toBe('');\n    expect(code).toBe(0);\n\n    stdout = removeColorCodes(stdout);\n    expect(stdout).toMatchInlineSnapshot(`\n      \"Rule                                                    |                       Time |                Timeouts |    🚨 Errors | ⚠️ Warnings\n      :-------------------------------------------------------|---------------------------:|------------------------:|-------------:|-----------:\n      @typescript-eslint/no-unused-vars    |         64.18 ms |         40.7% | 23 |            \n      @nx/dependency-checks                |         34.52 ms |         21.9% |              | 1\n      @nx/enforce-module-boundaries        |         16.71 ms |         10.6% |              | 2\n      @typescript-eslint/no-empty-function | 4.56 ms | 2.9% |              | 1\n      no-control-regex                              | 2.66 ms | 1.7% |              |            \n      prefer-const                         | 2.61 ms | 1.7% |              | 6\n      no-misleading-character-class                 | 2.59 ms | 1.6% |              |            \n      no-useless-escape                             | 2.16 ms | 1.4% |              |            \n      no-regex-spaces                               | 1.72 ms | 1.1% |              |            \n      no-global-assign                              | 1.70 ms | 1.1% |              |            \n      ...                                           |                            |                         |              |            \n      \"\n    `);\n  });\n\n  it('should run demo.ts with \"rule\" argument and log output', async () => {\n    let { stdout, stderr, code } = await executeProcess({\n      command: 'tsx',\n      args: [eslintStatsBinPath, eslintStatsPath, 'rule'],\n    });\n\n    expect(stderr).toBe('');\n    expect(code).toBe(0);\n\n    stdout = removeColorCodes(stdout);\n    expect(stdout).toMatchInlineSnapshot(`\n      \"Rule                                                    |                       Time |                Timeouts |    🚨 Errors | ⚠️ Warnings\n      :-------------------------------------------------------|---------------------------:|------------------------:|-------------:|-----------:\n      @typescript-eslint/no-unused-vars    |         64.18 ms |         40.7% | 23 |            \n      @nx/dependency-checks                |         34.52 ms |         21.9% |              | 1\n      @nx/enforce-module-boundaries        |         16.71 ms |         10.6% |              | 2\n      @typescript-eslint/no-empty-function | 4.56 ms | 2.9% |              | 1\n      no-control-regex                              | 2.66 ms | 1.7% |              |            \n      prefer-const                         | 2.61 ms | 1.7% |              | 6\n      no-misleading-character-class                 | 2.59 ms | 1.6% |              |            \n      no-useless-escape                             | 2.16 ms | 1.4% |              |            \n      no-regex-spaces                               | 1.72 ms | 1.1% |              |            \n      no-global-assign                              | 1.70 ms | 1.1% |              |            \n      ...                                           |                            |                         |              |            \n      \"\n    `);\n  });\n\n  it('should run demo.ts with \"file\" argument and log output', async () => {\n    let { stdout, stderr, code } = await executeProcess({\n      command: 'tsx',\n      args: [eslintStatsBinPath, eslintStatsPath, 'file'],\n    });\n\n    expect(stderr).toBe('');\n    expect(code).toBe(0);\n\n    stdout = removeColorCodes(stdout);\n    expect(stdout).toMatchInlineSnapshot(`\n      \"Rule                                                    |                       Time |                Timeouts |    🚨 Errors | ⚠️ Warnings\n      :-------------------------------------------------------|---------------------------:|------------------------:|-------------:|-----------:\n      @typescript-eslint/no-unused-vars    |         64.18 ms |         40.7% | 23 |            \n      @nx/dependency-checks                |         34.52 ms |         21.9% |              | 1\n      @nx/enforce-module-boundaries        |         16.71 ms |         10.6% |              | 2\n      @typescript-eslint/no-empty-function | 4.56 ms | 2.9% |              | 1\n      no-control-regex                              | 2.66 ms | 1.7% |              |            \n      prefer-const                         | 2.61 ms | 1.7% |              | 6\n      no-misleading-character-class                 | 2.59 ms | 1.6% |              |            \n      no-useless-escape                             | 2.16 ms | 1.4% |              |            \n      no-regex-spaces                               | 1.72 ms | 1.1% |              |            \n      no-global-assign                              | 1.70 ms | 1.1% |              |            \n      ...                                           |                            |                         |              |            \n      \"\n    `);\n  });\n\n  it('should run demo.ts with \"file-rule\" argument and log output', async () => {\n    let { stdout, stderr, code } = await executeProcess({\n      command: 'tsx',\n      args: [eslintStatsBinPath, eslintStatsPath, 'file-rule'],\n    });\n\n    expect(stderr).toBe('');\n    expect(code).toBe(0);\n\n    stdout = removeColorCodes(stdout);\n    expect(stdout).toMatchInlineSnapshot(`\n      \"Rule                                                    |                       Time |                Timeouts |    🚨 Errors | ⚠️ Warnings\n      :-------------------------------------------------------|---------------------------:|------------------------:|-------------:|-----------:\n      @typescript-eslint/no-unused-vars    |         64.18 ms |         40.7% | 23 |            \n      @nx/dependency-checks                |         34.52 ms |         21.9% |              | 1\n      @nx/enforce-module-boundaries        |         16.71 ms |         10.6% |              | 2\n      @typescript-eslint/no-empty-function | 4.56 ms | 2.9% |              | 1\n      no-control-regex                              | 2.66 ms | 1.7% |              |            \n      prefer-const                         | 2.61 ms | 1.7% |              | 6\n      no-misleading-character-class                 | 2.59 ms | 1.6% |              |            \n      no-useless-escape                             | 2.16 ms | 1.4% |              |            \n      no-regex-spaces                               | 1.72 ms | 1.1% |              |            \n      no-global-assign                              | 1.70 ms | 1.1% |              |            \n      ...                                           |                            |                         |              |            \n      \"\n    `);\n  });\n\n  it('should run demo.ts with \"rule\" and \"violations\" arguments and log output', async () => {\n    let { stdout, stderr, code } = await executeProcess({\n      command: 'tsx',\n      args: [eslintStatsBinPath, eslintStatsPath, 'rule', 'violations'],\n    });\n\n    expect(stderr).toBe('');\n    expect(code).toBe(0);\n\n    stdout = removeColorCodes(stdout);\n    expect(stdout).toMatchInlineSnapshot(`\n      \"Rule                                                    |                       Time |                Timeouts |    🚨 Errors | ⚠️ Warnings\n      :-------------------------------------------------------|---------------------------:|------------------------:|-------------:|-----------:\n      @typescript-eslint/no-unused-vars    |         64.18 ms |         40.7% | 23 |            \n      @nx/dependency-checks                |         34.52 ms |         21.9% |              | 1\n      @nx/enforce-module-boundaries        |         16.71 ms |         10.6% |              | 2\n      @typescript-eslint/no-empty-function | 4.56 ms | 2.9% |              | 1\n      no-control-regex                              | 2.66 ms | 1.7% |              |            \n      prefer-const                         | 2.61 ms | 1.7% |              | 6\n      no-misleading-character-class                 | 2.59 ms | 1.6% |              |            \n      no-useless-escape                             | 2.16 ms | 1.4% |              |            \n      no-regex-spaces                               | 1.72 ms | 1.1% |              |            \n      no-global-assign                              | 1.70 ms | 1.1% |              |            \n      ...                                           |                            |                         |              |            \n      \"\n    `);\n  });\n\n  it('should run demo.ts with \"file\" and \"violations\" arguments and log output', async () => {\n    let { stdout, stderr, code } = await executeProcess({\n      command: 'tsx',\n      args: [eslintStatsBinPath, eslintStatsPath, 'file', 'violations'],\n    });\n\n    expect(stderr).toBe('');\n    expect(code).toBe(0);\n\n    stdout = removeColorCodes(stdout);\n    expect(stdout).toMatchInlineSnapshot(`\n      \"Rule                                                    |                       Time |                Timeouts |    🚨 Errors | ⚠️ Warnings\n      :-------------------------------------------------------|---------------------------:|------------------------:|-------------:|-----------:\n      @typescript-eslint/no-unused-vars    |         64.18 ms |         40.7% | 23 |            \n      @nx/dependency-checks                |         34.52 ms |         21.9% |              | 1\n      @nx/enforce-module-boundaries        |         16.71 ms |         10.6% |              | 2\n      @typescript-eslint/no-empty-function | 4.56 ms | 2.9% |              | 1\n      no-control-regex                              | 2.66 ms | 1.7% |              |            \n      prefer-const                         | 2.61 ms | 1.7% |              | 6\n      no-misleading-character-class                 | 2.59 ms | 1.6% |              |            \n      no-useless-escape                             | 2.16 ms | 1.4% |              |            \n      no-regex-spaces                               | 1.72 ms | 1.1% |              |            \n      no-global-assign                              | 1.70 ms | 1.1% |              |            \n      ...                                           |                            |                         |              |            \n      \"\n    `);\n  });\n\n  it('should run demo.ts with \"file-rule\" and \"violations\" arguments and log output', async () => {\n    let { stdout, stderr, code } = await executeProcess({\n      command: 'tsx',\n      args: [eslintStatsBinPath, eslintStatsPath, 'file-rule', 'violations'],\n    });\n\n    expect(stderr).toBe('');\n    expect(code).toBe(0);\n\n    stdout = removeColorCodes(stdout);\n    expect(stdout).toMatchInlineSnapshot(`\n      \"Rule                                                    |                       Time |                Timeouts |    🚨 Errors | ⚠️ Warnings\n      :-------------------------------------------------------|---------------------------:|------------------------:|-------------:|-----------:\n      @typescript-eslint/no-unused-vars    |         64.18 ms |         40.7% | 23 |            \n      @nx/dependency-checks                |         34.52 ms |         21.9% |              | 1\n      @nx/enforce-module-boundaries        |         16.71 ms |         10.6% |              | 2\n      @typescript-eslint/no-empty-function | 4.56 ms | 2.9% |              | 1\n      no-control-regex                              | 2.66 ms | 1.7% |              |            \n      prefer-const                         | 2.61 ms | 1.7% |              | 6\n      no-misleading-character-class                 | 2.59 ms | 1.6% |              |            \n      no-useless-escape                             | 2.16 ms | 1.4% |              |            \n      no-regex-spaces                               | 1.72 ms | 1.1% |              |            \n      no-global-assign                              | 1.70 ms | 1.1% |              |            \n      ...                                           |                            |                         |              |            \n      \"\n    `);\n  });\n});\n",
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 13.227 },
            "rules": {
              "for-direction": { "total": 0.002417 },
              "no-async-promise-executor": { "total": 0.00125 },
              "no-case-declarations": { "total": 0.000875 },
              "no-compare-neg-zero": { "total": 0.001917 },
              "no-cond-assign": { "total": 0.002875 },
              "no-constant-binary-expression": { "total": 0.001292 },
              "no-constant-condition": { "total": 0.00475 },
              "no-control-regex": { "total": 0.02895900000000001 },
              "no-debugger": { "total": 0.000625 },
              "no-delete-var": { "total": 0.000625 },
              "no-dupe-else-if": { "total": 0.001458 },
              "no-duplicate-case": { "total": 0.000708 },
              "no-empty": { "total": 0.019665000000000002 },
              "no-empty-character-class": { "total": 0.000958 },
              "no-empty-pattern": { "total": 0.016874 },
              "no-empty-static-block": { "total": 0.000834 },
              "no-ex-assign": { "total": 0.000792 },
              "no-extra-boolean-cast": { "total": 0.03737700000000002 },
              "no-fallthrough": { "total": 0.02691700000000001 },
              "no-global-assign": { "total": 0.045459 },
              "no-invalid-regexp": { "total": 0.047876000000000016 },
              "no-irregular-whitespace": { "total": 0.030917 },
              "no-loss-of-precision": { "total": 0.014873000000000006 },
              "no-misleading-character-class": { "total": 0.068042 },
              "no-nonoctal-decimal-escape": { "total": 0.029505000000000017 },
              "no-octal": { "total": 0.03188100000000001 },
              "no-prototype-builtins": { "total": 0.07037500000000002 },
              "no-regex-spaces": { "total": 0.19425199999999984 },
              "no-self-assign": { "total": 0.06671 },
              "no-shadow-restricted-names": { "total": 0.105958 },
              "no-sparse-arrays": { "total": 0.003915999999999999 },
              "no-unsafe-finally": { "total": 0.001709 },
              "no-unsafe-optional-chaining": { "total": 0.07928300000000002 },
              "no-unused-labels": { "total": 0.001417 },
              "no-unused-private-class-members": { "total": 0.00175 },
              "no-useless-backreference": { "total": 0.074291 },
              "no-useless-catch": { "total": 0.000625 },
              "no-useless-escape": { "total": 0.07187600000000002 },
              "require-yield": { "total": 0.0015 },
              "use-isnan": { "total": 0.001792 },
              "valid-typeof": { "total": 0.003125 },
              "no-var": { "total": 0.008125000000000002 },
              "prefer-const": { "total": 0.594751 },
              "prefer-rest-params": { "total": 0.000959 },
              "prefer-spread": { "total": 0.06696200000000004 },
              "@typescript-eslint/ban-ts-comment": {
                "total": 0.13245800000000002
              },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.08024800000000001
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001958
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.004542 },
              "@typescript-eslint/no-explicit-any": { "total": 0.00325 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.002
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001875 },
              "@typescript-eslint/no-namespace": { "total": 0.002625 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001916
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002917 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.009709
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.002083
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.002083
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.1783369999999998
              },
              "@typescript-eslint/no-unused-vars": { "total": 1.255333 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.002458
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.010875000000000001
              },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.001375
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.012708999999999998
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001542 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.10195800000000001
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.5252930000000001
              },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.04095700000000001
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.002375 },
              "@nx/enforce-module-boundaries": { "total": 1.295375 }
            },
            "fix": { "total": 0 },
            "total": 22.469916
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/bin/eslint-stats.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 1.140625 },
            "rules": {
              "for-direction": { "total": 0.001417 },
              "no-async-promise-executor": { "total": 0.00075 },
              "no-case-declarations": { "total": 0.00075 },
              "no-compare-neg-zero": { "total": 0.001792 },
              "no-cond-assign": { "total": 0.002167 },
              "no-constant-binary-expression": { "total": 0.000917 },
              "no-constant-condition": { "total": 0.004458 },
              "no-control-regex": { "total": 0.0018750000000000001 },
              "no-debugger": { "total": 0.000625 },
              "no-delete-var": { "total": 0.000625 },
              "no-dupe-else-if": { "total": 0.001458 },
              "no-duplicate-case": { "total": 0.000792 },
              "no-empty": { "total": 0.001583 },
              "no-empty-character-class": { "total": 0.0005 },
              "no-empty-pattern": { "total": 0.001041 },
              "no-empty-static-block": { "total": 0.000625 },
              "no-ex-assign": { "total": 0.000583 },
              "no-extra-boolean-cast": { "total": 0.002667 },
              "no-fallthrough": { "total": 0.006083000000000001 },
              "no-global-assign": { "total": 0.022333000000000002 },
              "no-invalid-regexp": { "total": 0.003791 },
              "no-irregular-whitespace": { "total": 0.0027919999999999998 },
              "no-loss-of-precision": { "total": 0.116042 },
              "no-misleading-character-class": { "total": 0.013042 },
              "no-nonoctal-decimal-escape": { "total": 0.001793 },
              "no-octal": { "total": 0.0013340000000000001 },
              "no-prototype-builtins": { "total": 0.0029579999999999997 },
              "no-regex-spaces": { "total": 0.009249999999999998 },
              "no-self-assign": { "total": 0.000834 },
              "no-shadow-restricted-names": { "total": 0.002708 },
              "no-sparse-arrays": { "total": 0.000541 },
              "no-unsafe-finally": { "total": 0.001125 },
              "no-unsafe-optional-chaining": { "total": 0.007125 },
              "no-unused-labels": { "total": 0.00125 },
              "no-unused-private-class-members": { "total": 0.001 },
              "no-useless-backreference": { "total": 0.008874 },
              "no-useless-catch": { "total": 0.000541 },
              "no-useless-escape": { "total": 0.0037500000000000003 },
              "require-yield": { "total": 0.00125 },
              "use-isnan": { "total": 0.001625 },
              "valid-typeof": { "total": 0.00225 },
              "no-var": { "total": 0.000583 },
              "prefer-const": { "total": 0.001875 },
              "prefer-rest-params": { "total": 0.00075 },
              "prefer-spread": { "total": 0.002541 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.050125 },
              "@typescript-eslint/no-array-constructor": { "total": 0.004291 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001417
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.003583 },
              "@typescript-eslint/no-explicit-any": { "total": 0.002583 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001709
              },
              "@typescript-eslint/no-misused-new": { "total": 0.0015 },
              "@typescript-eslint/no-namespace": { "total": 0.002083 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001458
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002208 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.005709
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001584
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.0022919999999999998
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.018250000000000002
              },
              "@typescript-eslint/no-unused-vars": { "total": 0.492375 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.0025830000000000002
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.009666000000000001
              },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.001459
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.010917000000000001
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001375 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.007208
              },
              "@typescript-eslint/no-empty-function": { "total": 0.023625 },
              "@typescript-eslint/no-inferrable-types": { "total": 0.006959 },
              "@typescript-eslint/no-empty-interface": { "total": 0.002 },
              "@nx/enforce-module-boundaries": { "total": 0.109709 }
            },
            "fix": { "total": 0 },
            "total": 3.394584
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/cli/command/analyse/analyse.command.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-empty-object-type",
        "severity": 2,
        "message": "The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.",
        "line": 18,
        "column": 44,
        "nodeType": "TSTypeLiteral",
        "messageId": "noEmptyObject",
        "endLine": 18,
        "endColumn": 46,
        "suggestions": [
          {
            "messageId": "replaceEmptyObjectType",
            "data": { "replacement": "object" },
            "fix": { "range": [476, 478], "text": "object" },
            "desc": "Replace `{}` with `object`."
          },
          {
            "messageId": "replaceEmptyObjectType",
            "data": { "replacement": "unknown" },
            "fix": { "range": [476, 478], "text": "unknown" },
            "desc": "Replace `{}` with `unknown`."
          }
        ]
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "/**\n * @fileoverview Script to read ESLint performance statistics from a JSON file,\n * aggregate the rule timings, and display them in a formatted table.\n */\nimport type { Argv, CommandModule } from 'yargs';\nimport { analyseHandler } from './handler';\n\nexport interface AnalyseArgs {\n  interactive?: boolean;\n  file: string;\n  groupBy: string;\n  sortBy: string;\n  show: string[];\n  take?: (string | number)[];\n  outPath?: string;\n}\n\nexport const analyseCommand: CommandModule<{}, AnalyseArgs> = {\n  command: 'analyse <file>',\n  describe: 'Analyse ESLint stats JSON file',\n  builder: (yargs: Argv): Argv<AnalyseArgs> => {\n    return yargs\n      .positional('file', {\n        type: 'string',\n        description: 'Path to the ESLint stats JSON file',\n      })\n      .demandOption('file')\n      .group(\n        ['groupBy', 'sortBy', 'show', 'take', 'outPath', 'help'],\n        'Formatting Options:'\n      )\n      .option('groupBy', {\n        alias: 'g',\n        type: 'string',\n        description: 'Group by \"rule\", \"file\", or \"file-rule\"',\n        default: 'rule',\n        choices: ['rule', 'file', 'file-rule'],\n      })\n      .option('sortBy', {\n        alias: 's',\n        type: 'string',\n        description: 'Sort by \"time\" or \"violations\"',\n        default: 'time',\n        choices: ['time', 'violations'],\n      })\n      .option('show', {\n        description:\n          'Columns to show. Options: \"time\", \"relative\", \"violations\".',\n        type: 'array',\n        choices: ['time', 'relative', 'violations'],\n        default: ['time', 'relative', 'violations'],\n      })\n      .option('take', {\n        alias: 't',\n        type: 'array',\n        description:\n          'The number of entries to display. For `file-rule` group, two values can be provided for files and rules.',\n      })\n      .option('outPath', {\n        type: 'string',\n        description:\n          'Path to the output file. Defaults to the input file name with a .md extension.',\n      })\n      .option('interactive', {\n        type: 'boolean',\n        description: 'Interactive mode',\n        default: process.stdout.isTTY,\n      });\n  },\n  handler: analyseHandler,\n};\n",
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 4.62275 },
            "rules": {
              "for-direction": { "total": 0.002709 },
              "no-async-promise-executor": { "total": 0.001125 },
              "no-case-declarations": { "total": 0.001167 },
              "no-compare-neg-zero": { "total": 0.002417 },
              "no-cond-assign": { "total": 0.003792 },
              "no-constant-binary-expression": { "total": 0.001958 },
              "no-constant-condition": { "total": 0.005084 },
              "no-control-regex": { "total": 0.016127000000000006 },
              "no-debugger": { "total": 0.0005 },
              "no-delete-var": { "total": 0.001084 },
              "no-dupe-else-if": { "total": 0.001375 },
              "no-duplicate-case": { "total": 0.000625 },
              "no-empty": { "total": 0.0024590000000000002 },
              "no-empty-character-class": { "total": 0.001 },
              "no-empty-pattern": { "total": 0.001375 },
              "no-empty-static-block": { "total": 0.00075 },
              "no-ex-assign": { "total": 0.000791 },
              "no-extra-boolean-cast": { "total": 0.004 },
              "no-fallthrough": { "total": 0.018539 },
              "no-global-assign": { "total": 0.022292 },
              "no-invalid-regexp": { "total": 0.077752 },
              "no-irregular-whitespace": { "total": 0.008416 },
              "no-loss-of-precision": { "total": 0.00875 },
              "no-misleading-character-class": { "total": 0.08441699999999999 },
              "no-nonoctal-decimal-escape": { "total": 0.011793 },
              "no-octal": { "total": 0.0072920000000000025 },
              "no-prototype-builtins": { "total": 0.0040420000000000005 },
              "no-regex-spaces": { "total": 0.02658200000000001 },
              "no-self-assign": { "total": 0.002 },
              "no-shadow-restricted-names": { "total": 0.005292 },
              "no-sparse-arrays": { "total": 0.002043 },
              "no-unsafe-finally": { "total": 0.086041 },
              "no-unsafe-optional-chaining": { "total": 0.009666000000000003 },
              "no-unused-labels": { "total": 0.001833 },
              "no-unused-private-class-members": { "total": 0.0015 },
              "no-useless-backreference": { "total": 0.019791 },
              "no-useless-catch": { "total": 0.000625 },
              "no-useless-escape": { "total": 0.016838000000000016 },
              "require-yield": { "total": 0.001542 },
              "use-isnan": { "total": 0.001666 },
              "valid-typeof": { "total": 0.002833 },
              "no-var": { "total": 0.001375 },
              "prefer-const": { "total": 0.004084 },
              "prefer-rest-params": { "total": 0.000833 },
              "prefer-spread": { "total": 0.0038340000000000006 },
              "@typescript-eslint/ban-ts-comment": {
                "total": 0.050957999999999996
              },
              "@typescript-eslint/no-array-constructor": { "total": 0.005623 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.002084
              },
              "@typescript-eslint/no-empty-object-type": {
                "total": 0.15437499999999998
              },
              "@typescript-eslint/no-explicit-any": { "total": 0.003458 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001875
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001792 },
              "@typescript-eslint/no-namespace": { "total": 0.00325 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001667
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002958 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.010167
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.024
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.016336000000000003
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.018334 },
              "@typescript-eslint/no-unused-vars": { "total": 0.64625 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.023584000000000004
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.022792 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.001333
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.053333
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001583 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.020791999999999998
              },
              "@typescript-eslint/no-empty-function": { "total": 0.044334 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.059083000000000004
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.037292 },
              "@nx/enforce-module-boundaries": { "total": 0.36066599999999993 }
            },
            "fix": { "total": 0 },
            "total": 10.308917
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/cli/command/analyse/constants.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 1.372292 },
            "rules": {
              "for-direction": { "total": 0.001542 },
              "no-async-promise-executor": { "total": 0.00075 },
              "no-case-declarations": { "total": 0.000584 },
              "no-compare-neg-zero": { "total": 0.00175 },
              "no-cond-assign": { "total": 0.002292 },
              "no-constant-binary-expression": { "total": 0.002167 },
              "no-constant-condition": { "total": 0.005958 },
              "no-control-regex": { "total": 0.006833000000000001 },
              "no-debugger": { "total": 0.000542 },
              "no-delete-var": { "total": 0.00075 },
              "no-dupe-else-if": { "total": 0.002 },
              "no-duplicate-case": { "total": 0.000625 },
              "no-empty": { "total": 0.001708 },
              "no-empty-character-class": { "total": 0.000542 },
              "no-empty-pattern": { "total": 0.001083 },
              "no-empty-static-block": { "total": 0.000625 },
              "no-ex-assign": { "total": 0.001708 },
              "no-extra-boolean-cast": { "total": 0.00225 },
              "no-fallthrough": { "total": 0.006334 },
              "no-global-assign": { "total": 0.028915999999999997 },
              "no-invalid-regexp": { "total": 0.001166 },
              "no-irregular-whitespace": { "total": 0.004416000000000001 },
              "no-loss-of-precision": { "total": 0.0036260000000000003 },
              "no-misleading-character-class": { "total": 0.012916 },
              "no-nonoctal-decimal-escape": { "total": 0.006123999999999999 },
              "no-octal": { "total": 0.002125 },
              "no-prototype-builtins": { "total": 0.00125 },
              "no-regex-spaces": { "total": 0.0038310000000000006 },
              "no-self-assign": { "total": 0.001 },
              "no-shadow-restricted-names": { "total": 0.006124999999999999 },
              "no-sparse-arrays": { "total": 0.00075 },
              "no-unsafe-finally": { "total": 0.001167 },
              "no-unsafe-optional-chaining": { "total": 0.006124999999999999 },
              "no-unused-labels": { "total": 0.001292 },
              "no-unused-private-class-members": { "total": 0.001041 },
              "no-useless-backreference": { "total": 0.003915999999999999 },
              "no-useless-catch": { "total": 0.000542 },
              "no-useless-escape": { "total": 0.033292 },
              "require-yield": { "total": 0.001292 },
              "use-isnan": { "total": 0.0015 },
              "valid-typeof": { "total": 0.002209 },
              "no-var": { "total": 0.0035 },
              "prefer-const": { "total": 0.004999000000000001 },
              "prefer-rest-params": { "total": 0.000792 },
              "prefer-spread": { "total": 0.000542 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.012958 },
              "@typescript-eslint/no-array-constructor": { "total": 0.002416 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001458
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.004083 },
              "@typescript-eslint/no-explicit-any": { "total": 0.002667 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001708
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001667 },
              "@typescript-eslint/no-namespace": { "total": 0.002334 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.00225
              },
              "@typescript-eslint/no-this-alias": { "total": 0.0025 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.007083
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001542
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.001708
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.015583 },
              "@typescript-eslint/no-unused-vars": { "total": 2.281543 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.001875
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.063377 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.002083
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.009374
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.00125 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.007542
              },
              "@typescript-eslint/no-empty-function": { "total": 0.00525 },
              "@typescript-eslint/no-inferrable-types": { "total": 0.007206 },
              "@typescript-eslint/no-empty-interface": { "total": 0.002084 },
              "@nx/enforce-module-boundaries": { "total": 0.02875 }
            },
            "fix": { "total": 0 },
            "total": 5.361
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/cli/command/analyse/handler.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 3.13625 },
            "rules": {
              "for-direction": { "total": 0.00275 },
              "no-async-promise-executor": { "total": 0.001334 },
              "no-case-declarations": { "total": 0.00125 },
              "no-compare-neg-zero": { "total": 0.012001 },
              "no-cond-assign": { "total": 0.015375 },
              "no-constant-binary-expression": { "total": 0.124084 },
              "no-constant-condition": { "total": 0.029792 },
              "no-control-regex": { "total": 0.003999 },
              "no-debugger": { "total": 0.000708 },
              "no-delete-var": { "total": 0.009250000000000001 },
              "no-dupe-else-if": { "total": 0.045917000000000006 },
              "no-duplicate-case": { "total": 0.000916 },
              "no-empty": { "total": 0.0034170000000000008 },
              "no-empty-character-class": { "total": 0.000959 },
              "no-empty-pattern": { "total": 0.0015 },
              "no-empty-static-block": { "total": 0.000833 },
              "no-ex-assign": { "total": 0.028501000000000002 },
              "no-extra-boolean-cast": { "total": 0.018167000000000003 },
              "no-fallthrough": { "total": 0.011627000000000004 },
              "no-global-assign": { "total": 0.039126 },
              "no-invalid-regexp": { "total": 0.0030010000000000006 },
              "no-irregular-whitespace": { "total": 0.006084 },
              "no-loss-of-precision": { "total": 0.030085 },
              "no-misleading-character-class": { "total": 0.015 },
              "no-nonoctal-decimal-escape": { "total": 0.003709 },
              "no-octal": { "total": 0.0026240000000000005 },
              "no-prototype-builtins": { "total": 0.005666 },
              "no-regex-spaces": { "total": 0.018664000000000004 },
              "no-self-assign": { "total": 0.001208 },
              "no-shadow-restricted-names": { "total": 0.009581000000000001 },
              "no-sparse-arrays": { "total": 0.000917 },
              "no-unsafe-finally": { "total": 0.004749 },
              "no-unsafe-optional-chaining": { "total": 0.029879000000000003 },
              "no-unused-labels": { "total": 0.001459 },
              "no-unused-private-class-members": { "total": 0.001833 },
              "no-useless-backreference": { "total": 0.0040420000000000005 },
              "no-useless-catch": { "total": 0.014083 },
              "no-useless-escape": { "total": 0.0066240000000000005 },
              "require-yield": { "total": 0.015959 },
              "use-isnan": { "total": 0.063875 },
              "valid-typeof": { "total": 0.039042 },
              "no-var": { "total": 0.002 },
              "prefer-const": { "total": 0.003 },
              "prefer-rest-params": { "total": 0.020125 },
              "prefer-spread": { "total": 0.004916 },
              "@typescript-eslint/ban-ts-comment": {
                "total": 0.06904199999999999
              },
              "@typescript-eslint/no-array-constructor": { "total": 0.004667 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.002041
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.006042 },
              "@typescript-eslint/no-explicit-any": { "total": 0.003417 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.002166
              },
              "@typescript-eslint/no-misused-new": { "total": 0.002 },
              "@typescript-eslint/no-namespace": { "total": 0.002666 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001875
              },
              "@typescript-eslint/no-this-alias": { "total": 0.004125 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.00975
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.002
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.003918
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.022207 },
              "@typescript-eslint/no-unused-vars": { "total": 0.672125 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.004209
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.004915999999999999
              },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.001542
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.015834
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001708 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.02675000000000001
              },
              "@typescript-eslint/no-empty-function": { "total": 0.074041 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.010166000000000001
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.002875 },
              "@nx/enforce-module-boundaries": { "total": 0.18828900000000004 }
            },
            "fix": { "total": 0 },
            "total": 7.422792
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/cli/command/analyse/interactive.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-explicit-any",
        "severity": 1,
        "message": "Unexpected any. Specify a different type.",
        "line": 56,
        "column": 58,
        "nodeType": "TSAnyKeyword",
        "messageId": "unexpectedAny",
        "endLine": 56,
        "endColumn": 61,
        "suggestions": [
          {
            "messageId": "suggestUnknown",
            "fix": { "range": [1691, 1694], "text": "unknown" },
            "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
          },
          {
            "messageId": "suggestNever",
            "fix": { "range": [1691, 1694], "text": "never" },
            "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
          }
        ]
      },
      {
        "ruleId": "@typescript-eslint/no-explicit-any",
        "severity": 1,
        "message": "Unexpected any. Specify a different type.",
        "line": 57,
        "column": 55,
        "nodeType": "TSAnyKeyword",
        "messageId": "unexpectedAny",
        "endLine": 57,
        "endColumn": 58,
        "suggestions": [
          {
            "messageId": "suggestUnknown",
            "fix": { "range": [1751, 1754], "text": "unknown" },
            "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
          },
          {
            "messageId": "suggestNever",
            "fix": { "range": [1751, 1754], "text": "never" },
            "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
          }
        ]
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 2,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import ansis from 'ansis';\nimport { renderTable, ShowOption } from '../../../reporting/render-table';\nimport { reprintSection } from './utils';\nimport { AnalyseArgs } from './analyse.command';\nimport { DetailedRuleStat } from '../../../models/eslint-stats.schema';\nimport {\n  ARROW_DOWN,\n  ARROW_LEFT,\n  ARROW_RIGHT,\n  ARROW_UP,\n  CTRL_C,\n  MINUS,\n  PLUS,\n  SHIFT_TAB,\n  TAB,\n  ENTER,\n} from './constants';\nimport { getRowsToRender } from './processing';\nimport { terminalFormat } from '../../../reporting/terminal-format';\nimport {\n  getFirstColumnHeader,\n  getTableHeaders,\n} from '../../../reporting/table-headers';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { formatAggregatedTimesForDisplay } from '../../../reporting/format';\n\ntype DetailedRuleStats = DetailedRuleStat[];\ntype SortOrder = 'asc' | 'desc';\ntype Action = 'group' | 'sort' | 'order' | 'rows' | 'write';\n\ninterface InteractiveState {\n  groupByIndex: number;\n  sortByIndex: number;\n  sortOrder: SortOrder;\n  take: number[];\n  lastAction: Action | null;\n  notification?: string;\n  outputPath?: string;\n}\n\nconst groupByOptions = ['rule', 'file', 'file-rule'] as const;\nconst sortByOptions = ['time', 'violations'] as const;\nconst maxGroupByLength = Math.max(...groupByOptions.map((s) => s.length));\nconst maxSortByLength = Math.max(...sortByOptions.map((s) => s.length));\n\nfunction initInteractiveState(argv: AnalyseArgs): InteractiveState {\n  const outputPath = argv.outPath\n    ? path.resolve(argv.outPath)\n    : path.resolve(\n        path.dirname(argv.file),\n        path.basename(argv.file, path.extname(argv.file)) + '.md'\n      );\n\n  return {\n    groupByIndex: groupByOptions.indexOf(argv.groupBy as any),\n    sortByIndex: sortByOptions.indexOf(argv.sortBy as any),\n    sortOrder: 'desc',\n    take: argv.take?.map((n) => Number(n)) ?? [10],\n    lastAction: 'sort',\n    notification: undefined,\n    outputPath,\n  };\n}\n\nfunction handleKeyPress(\n  key: string,\n  state: InteractiveState\n): InteractiveState {\n  const newState = { ...state, notification: undefined };\n  switch (key) {\n    case ARROW_RIGHT:\n      return {\n        ...newState,\n        sortByIndex: (state.sortByIndex + 1) % sortByOptions.length,\n        lastAction: 'sort',\n      };\n    case ARROW_LEFT:\n      return {\n        ...newState,\n        sortByIndex:\n          (state.sortByIndex - 1 + sortByOptions.length) % sortByOptions.length,\n        lastAction: 'sort',\n      };\n    case ARROW_UP:\n    case ARROW_DOWN:\n      return {\n        ...newState,\n        sortOrder: state.sortOrder === 'desc' ? 'asc' : 'desc',\n        lastAction: 'order',\n      };\n    case TAB:\n      return {\n        ...newState,\n        groupByIndex: (state.groupByIndex + 1) % groupByOptions.length,\n        lastAction: 'group',\n      };\n    case SHIFT_TAB:\n      return {\n        ...newState,\n        groupByIndex:\n          (state.groupByIndex - 1 + groupByOptions.length) %\n          groupByOptions.length,\n        lastAction: 'group',\n      };\n    case PLUS:\n      return {\n        ...newState,\n        take: state.take.map((n) => n + 1),\n        lastAction: 'rows',\n      };\n    case MINUS:\n      return {\n        ...newState,\n        take: state.take.map((n) => Math.max(1, n - 1)),\n        lastAction: 'rows',\n      };\n    case ENTER:\n      if (state.outputPath) {\n        return {\n          ...newState,\n          lastAction: 'write',\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n}\n\nfunction createInteractivLegend(state: InteractiveState): string {\n  const {\n    groupByIndex,\n    sortByIndex,\n    sortOrder,\n    take,\n    lastAction,\n    notification,\n    outputPath,\n  } = state;\n  const groupBy = groupByOptions[groupByIndex];\n  const sortBy = sortByOptions[sortByIndex];\n\n  const paddedGroupBy = groupBy.padEnd(maxGroupByLength);\n  const paddedSortBy = sortBy.padEnd(maxSortByLength);\n\n  const groupControl = `${ansis.cyan('Group:')} ${ansis.yellow(\n    paddedGroupBy\n  )} ${ansis.gray('(Tab)')}`;\n  const sortControl = `${ansis.cyan('Sort:')} ${ansis.yellow(\n    paddedSortBy\n  )} ${ansis.gray('(←/→)')}`;\n  const orderControl = `${ansis.cyan('Order:')} ${ansis.yellow(\n    sortOrder === 'desc' ? '↓' : '↑'\n  )} ${ansis.gray('(↑/↓)')}`;\n  const rowsControl = `${ansis.cyan('Rows:')} ${ansis.yellow(\n    take.join(', ')\n  )} ${ansis.gray('(+/-)')}`;\n  const quitControl = `${ansis.cyan('Quit:')} ${ansis.yellow('Ctrl+C')} `;\n\n  const leftHeader = [\n    lastAction === 'group' ? ansis.bold(groupControl) : groupControl,\n    lastAction === 'sort' ? ansis.bold(sortControl) : sortControl,\n    lastAction === 'order' ? ansis.bold(orderControl) : orderControl,\n  ].join(' | ');\n  const rightHeaderControls = [\n    lastAction === 'rows' ? ansis.bold(rowsControl) : rowsControl,\n  ];\n\n  if (outputPath) {\n    const writeControlStr = `${ansis.cyan('Write:')} ${ansis.yellow('Enter')}`;\n    const writeControl =\n      lastAction === 'write' ? ansis.bold(writeControlStr) : writeControlStr;\n    rightHeaderControls.push(writeControl);\n  }\n\n  rightHeaderControls.push(quitControl);\n  const rightHeader = rightHeaderControls.join(' | ');\n\n  const header = `${leftHeader} | ${rightHeader}`;\n  if (notification) {\n    return `${ansis.green(notification)}\\n${header}`;\n  }\n  return header;\n}\n\nfunction renderInteractiveView(\n  state: InteractiveState,\n  detailedStats: DetailedRuleStats,\n  show: ShowOption[]\n): string {\n  const { groupByIndex, sortByIndex, sortOrder, take, lastAction } = state;\n  const groupBy = groupByOptions[groupByIndex];\n  const sortBy = sortByOptions[sortByIndex];\n\n  const processedData = getRowsToRender(detailedStats, {\n    groupBy,\n    sortBy,\n    sortOrder,\n    take,\n    show,\n  });\n  const formattedData = formatAggregatedTimesForDisplay(processedData);\n\n  const firstColumnHeader = getFirstColumnHeader(groupBy);\n  const headers = getTableHeaders(firstColumnHeader);\n  const sortArrow = sortOrder === 'desc' ? '↓' : '↑';\n  if (sortBy === 'time') {\n    headers[1] = `${headers[1]} ${sortArrow}`;\n    headers[2] = `${headers[2]} ${sortArrow}`;\n  } else if (sortBy === 'violations') {\n    headers[3] = `${headers[3]} ${sortArrow}`;\n    headers[4] = `${headers[4]} ${sortArrow}`;\n  }\n\n  if (lastAction === 'group') {\n    headers[0] = ansis.bold(headers[0]);\n  } else if (lastAction === 'sort' || lastAction === 'order') {\n    if (sortBy === 'time') {\n      headers[1] = ansis.bold(headers[1]);\n      headers[2] = ansis.bold(headers[2]);\n    } else if (sortBy === 'violations') {\n      headers[3] = ansis.bold(headers[3]);\n      headers[4] = ansis.bold(headers[4]);\n    }\n  }\n\n  const tableStr = renderTable(terminalFormat(formattedData), {\n    headers: headers,\n    show,\n  });\n\n  const header = createInteractivLegend(state);\n\n  const linesToPrint = [header, '', tableStr];\n  reprintSection(linesToPrint);\n  return tableStr;\n}\n\nfunction handleWriteAction(\n  state: InteractiveState,\n  tableStr: string,\n  outputPath: string,\n  analyzedFilePath: string\n): InteractiveState {\n  const outputName = path.basename(outputPath);\n\n  const { groupByIndex, sortByIndex, sortOrder, take } = state;\n  const groupBy = groupByOptions[groupByIndex];\n  const sortBy = sortByOptions[sortByIndex];\n  const stateDescription = `> State: Group by **${groupBy}**, Sort by **${sortBy}** (${sortOrder}), Rows: **${take.join(\n    ', '\n  )}**`;\n\n  const newContent = `${stateDescription}\\n\\n${ansis.strip(tableStr)}`;\n  let contentToAppend: string;\n\n  if (fs.existsSync(outputPath) && fs.statSync(outputPath).size > 0) {\n    contentToAppend = `\\n\\n---\\n\\n${newContent}`;\n  } else {\n    const analyzedFileName = path.basename(analyzedFilePath);\n    contentToAppend = `# Eslint Stats Analysis\\n\\nFile: **${analyzedFileName}**\\n\\n---\\n\\n${newContent}`;\n  }\n\n  fs.appendFileSync(outputPath, contentToAppend);\n  return {\n    ...state,\n    lastAction: null,\n    notification: `Appended to ${outputName}`,\n  };\n}\n\nfunction setupStdin(onData: (key: string) => void, onExit: () => void) {\n  process.stdin.setRawMode(true);\n  process.stdin.resume();\n  process.stdin.setEncoding('utf8');\n  process.stdin.on('data', (key: string) => {\n    if (key === CTRL_C) {\n      onExit();\n    } else {\n      onData(key);\n    }\n  });\n}\n\nexport function startInteractiveSession(\n  detailedStats: DetailedRuleStats,\n  argv: AnalyseArgs\n): void {\n  let state = initInteractiveState(argv);\n\n  const { show, file } = argv;\n\n  let tableStr: string;\n\n  const renderScreen = () =>\n    (tableStr = renderInteractiveView(\n      state,\n      detailedStats,\n      show as ShowOption[]\n    ));\n\n  setupStdin(\n    (key: string) => {\n      state = handleKeyPress(key, state);\n      if (state.lastAction === 'write' && state.outputPath) {\n        state = handleWriteAction(state, tableStr, state.outputPath, file);\n      }\n      renderScreen();\n    },\n    () => process.exit(0)\n  );\n\n  console.clear();\n  renderScreen();\n}\n",
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 15.722875 },
            "rules": {
              "for-direction": { "total": 0.055625 },
              "no-async-promise-executor": { "total": 0.001791 },
              "no-case-declarations": { "total": 0.07058400000000001 },
              "no-compare-neg-zero": { "total": 0.03479 },
              "no-cond-assign": { "total": 0.009583 },
              "no-constant-binary-expression": { "total": 0.27821300000000004 },
              "no-constant-condition": { "total": 0.10342000000000001 },
              "no-control-regex": { "total": 0.023460000000000016 },
              "no-debugger": { "total": 0.00075 },
              "no-delete-var": { "total": 0.001 },
              "no-dupe-else-if": { "total": 0.099207 },
              "no-duplicate-case": { "total": 0.096291 },
              "no-empty": { "total": 0.008709 },
              "no-empty-character-class": { "total": 0.001334 },
              "no-empty-pattern": { "total": 0.0032909999999999997 },
              "no-empty-static-block": { "total": 0.001958 },
              "no-ex-assign": { "total": 0.001375 },
              "no-extra-boolean-cast": { "total": 0.04729600000000002 },
              "no-fallthrough": { "total": 0.1335010000000001 },
              "no-global-assign": { "total": 0.036874000000000004 },
              "no-invalid-regexp": { "total": 0.018040000000000007 },
              "no-irregular-whitespace": { "total": 0.01275 },
              "no-loss-of-precision": { "total": 0.1744579999999996 },
              "no-misleading-character-class": { "total": 0.10212399999999999 },
              "no-nonoctal-decimal-escape": { "total": 0.019925000000000016 },
              "no-octal": { "total": 0.025295000000000015 },
              "no-prototype-builtins": { "total": 0.025123000000000013 },
              "no-regex-spaces": { "total": 0.09816200000000007 },
              "no-self-assign": { "total": 0.022250000000000006 },
              "no-shadow-restricted-names": { "total": 0.04995800000000003 },
              "no-sparse-arrays": { "total": 0.003708 },
              "no-unsafe-finally": { "total": 0.030918000000000008 },
              "no-unsafe-optional-chaining": { "total": 0.07551200000000007 },
              "no-unused-labels": { "total": 0.002125 },
              "no-unused-private-class-members": { "total": 0.002333 },
              "no-useless-backreference": { "total": 0.004542 },
              "no-useless-catch": { "total": 0.000958 },
              "no-useless-escape": { "total": 0.07133100000000005 },
              "require-yield": { "total": 0.0047929999999999995 },
              "use-isnan": { "total": 0.03195900000000001 },
              "valid-typeof": { "total": 0.0035009999999999998 },
              "no-var": { "total": 0.07649800000000001 },
              "prefer-const": { "total": 0.023377000000000002 },
              "prefer-rest-params": { "total": 0.010415 },
              "prefer-spread": { "total": 0.02258100000000001 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.023125 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.015455000000000007
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.002417
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.007458 },
              "@typescript-eslint/no-explicit-any": {
                "total": 0.11754200000000001
              },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.002791
              },
              "@typescript-eslint/no-misused-new": { "total": 0.047209 },
              "@typescript-eslint/no-namespace": { "total": 0.006458 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.002709
              },
              "@typescript-eslint/no-this-alias": { "total": 0.00375 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.01325
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.07358400000000001
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.011628000000000001
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.03695500000000001
              },
              "@typescript-eslint/no-unused-vars": { "total": 3.157332 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.10858100000000001
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.012750000000000006
              },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.002042
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.016417
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.002167 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.08408400000000002
              },
              "@typescript-eslint/no-empty-function": { "total": 0.38054 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.14750699999999983
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.004624 },
              "@nx/enforce-module-boundaries": { "total": 5.537332999999999 }
            },
            "fix": { "total": 0 },
            "total": 32.309875
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/cli/command/analyse/processing.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 3.1335 },
            "rules": {
              "for-direction": { "total": 0.002417 },
              "no-async-promise-executor": { "total": 0.001167 },
              "no-case-declarations": { "total": 0.035749 },
              "no-compare-neg-zero": { "total": 0.002167 },
              "no-cond-assign": { "total": 0.003292 },
              "no-constant-binary-expression": { "total": 0.001083 },
              "no-constant-condition": { "total": 0.0060420000000000005 },
              "no-control-regex": { "total": 0.005667 },
              "no-debugger": { "total": 0.001333 },
              "no-delete-var": { "total": 0.000666 },
              "no-dupe-else-if": { "total": 0.001375 },
              "no-duplicate-case": { "total": 0.093167 },
              "no-empty": { "total": 0.011667 },
              "no-empty-character-class": { "total": 0.000667 },
              "no-empty-pattern": { "total": 0.001584 },
              "no-empty-static-block": { "total": 0.000666 },
              "no-ex-assign": { "total": 0.000833 },
              "no-extra-boolean-cast": { "total": 0.004333 },
              "no-fallthrough": { "total": 0.18808299999999992 },
              "no-global-assign": { "total": 0.027917 },
              "no-invalid-regexp": { "total": 0.003997 },
              "no-irregular-whitespace": { "total": 0.006208 },
              "no-loss-of-precision": { "total": 0.00425 },
              "no-misleading-character-class": {
                "total": 0.014166999999999999
              },
              "no-nonoctal-decimal-escape": { "total": 0.005711 },
              "no-octal": { "total": 0.009918000000000003 },
              "no-prototype-builtins": { "total": 0.005248 },
              "no-regex-spaces": { "total": 0.021665000000000007 },
              "no-self-assign": { "total": 0.007793 },
              "no-shadow-restricted-names": { "total": 0.011293000000000001 },
              "no-sparse-arrays": { "total": 0.000875 },
              "no-unsafe-finally": { "total": 0.10733100000000001 },
              "no-unsafe-optional-chaining": { "total": 0.011249000000000002 },
              "no-unused-labels": { "total": 0.013292 },
              "no-unused-private-class-members": { "total": 0.002 },
              "no-useless-backreference": { "total": 0.003917 },
              "no-useless-catch": { "total": 0.000583 },
              "no-useless-escape": { "total": 0.009708999999999999 },
              "require-yield": { "total": 0.0020009999999999997 },
              "use-isnan": { "total": 0.036250000000000004 },
              "valid-typeof": { "total": 0.002584 },
              "no-var": { "total": 0.002082 },
              "prefer-const": { "total": 0.01425 },
              "prefer-rest-params": { "total": 0.002333 },
              "prefer-spread": { "total": 0.003664 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.017 },
              "@typescript-eslint/no-array-constructor": { "total": 0.005542 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.002292
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.00625 },
              "@typescript-eslint/no-explicit-any": { "total": 0.003625 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.002459
              },
              "@typescript-eslint/no-misused-new": { "total": 0.002042 },
              "@typescript-eslint/no-namespace": { "total": 0.00275 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.00175
              },
              "@typescript-eslint/no-this-alias": { "total": 0.00275 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.009
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.002333
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.006544
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.031833 },
              "@typescript-eslint/no-unused-vars": {
                "total": 0.8132090000000001
              },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.006293
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.005458 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.001583
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.012292
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001458 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.017083
              },
              "@typescript-eslint/no-empty-function": { "total": 0.122874 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.009999000000000001
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.002458 },
              "@nx/enforce-module-boundaries": { "total": 0.098 }
            },
            "fix": { "total": 0 },
            "total": 7.2625
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/cli/command/analyse/utils.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 0.672709 },
            "rules": {
              "for-direction": { "total": 0.012 },
              "no-async-promise-executor": { "total": 0.00125 },
              "no-case-declarations": { "total": 0.001125 },
              "no-compare-neg-zero": { "total": 0.003334 },
              "no-cond-assign": { "total": 0.00375 },
              "no-constant-binary-expression": { "total": 0.005084 },
              "no-constant-condition": { "total": 0.012374999999999999 },
              "no-control-regex": { "total": 0.002041 },
              "no-debugger": { "total": 0.000708 },
              "no-delete-var": { "total": 0.000666 },
              "no-dupe-else-if": { "total": 0.002 },
              "no-duplicate-case": { "total": 0.001208 },
              "no-empty": { "total": 0.002708 },
              "no-empty-character-class": { "total": 0.000667 },
              "no-empty-pattern": { "total": 0.002 },
              "no-empty-static-block": { "total": 0.001375 },
              "no-ex-assign": { "total": 0.001209 },
              "no-extra-boolean-cast": { "total": 0.006209 },
              "no-fallthrough": { "total": 0.018792000000000003 },
              "no-global-assign": { "total": 0.08741700000000001 },
              "no-invalid-regexp": { "total": 0.0022500000000000003 },
              "no-irregular-whitespace": { "total": 0.003249 },
              "no-loss-of-precision": { "total": 0.0019169999999999999 },
              "no-misleading-character-class": { "total": 0.015667 },
              "no-nonoctal-decimal-escape": { "total": 0.0022500000000000003 },
              "no-octal": { "total": 0.0010840000000000001 },
              "no-prototype-builtins": { "total": 0.0025 },
              "no-regex-spaces": { "total": 0.004541 },
              "no-self-assign": { "total": 0.001625 },
              "no-shadow-restricted-names": { "total": 0.0040409999999999995 },
              "no-sparse-arrays": { "total": 0.00075 },
              "no-unsafe-finally": { "total": 0.001417 },
              "no-unsafe-optional-chaining": { "total": 0.010167 },
              "no-unused-labels": { "total": 0.001916 },
              "no-unused-private-class-members": { "total": 0.001708 },
              "no-useless-backreference": { "total": 0.0043749999999999995 },
              "no-useless-catch": { "total": 0.000583 },
              "no-useless-escape": { "total": 0.012583999999999998 },
              "require-yield": { "total": 0.00175 },
              "use-isnan": { "total": 0.0065840000000000004 },
              "valid-typeof": { "total": 0.004875 },
              "no-var": { "total": 0.001751 },
              "prefer-const": { "total": 0.004459 },
              "prefer-rest-params": { "total": 0.0055 },
              "prefer-spread": { "total": 0.002041 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.01475 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.0037920000000000002
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.002042
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.055375 },
              "@typescript-eslint/no-explicit-any": { "total": 0.0065 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.002042
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001708 },
              "@typescript-eslint/no-namespace": { "total": 0.003917 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.00175
              },
              "@typescript-eslint/no-this-alias": { "total": 0.003583 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.007166
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.002042
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.001833
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.018083000000000002
              },
              "@typescript-eslint/no-unused-vars": { "total": 0.445667 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.002041
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.001833 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.001375
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.012750000000000001
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.002042 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.006708
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.018708000000000002
              },
              "@typescript-eslint/no-inferrable-types": { "total": 0.006791 },
              "@typescript-eslint/no-empty-interface": { "total": 0.003584 },
              "@nx/enforce-module-boundaries": { "total": 0.078708 }
            },
            "fix": { "total": 0 },
            "total": 2.721209
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/cli/core/main.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 1.101958 },
            "rules": {
              "for-direction": { "total": 0.004125 },
              "no-async-promise-executor": { "total": 0.000459 },
              "no-case-declarations": { "total": 0.000333 },
              "no-compare-neg-zero": { "total": 0.001 },
              "no-cond-assign": { "total": 0.005458 },
              "no-constant-binary-expression": { "total": 0.001333 },
              "no-constant-condition": { "total": 0.007834 },
              "no-control-regex": { "total": 0.003042 },
              "no-debugger": { "total": 0.000416 },
              "no-delete-var": { "total": 0.000292 },
              "no-dupe-else-if": { "total": 0.001667 },
              "no-duplicate-case": { "total": 0.001083 },
              "no-empty": { "total": 0.08595900000000001 },
              "no-empty-character-class": { "total": 0.000458 },
              "no-empty-pattern": { "total": 0.004666 },
              "no-empty-static-block": { "total": 0.001417 },
              "no-ex-assign": { "total": 0.000917 },
              "no-extra-boolean-cast": { "total": 0.0050420000000000005 },
              "no-fallthrough": { "total": 0.006959000000000001 },
              "no-global-assign": { "total": 0.033625 },
              "no-invalid-regexp": { "total": 0.004166000000000001 },
              "no-irregular-whitespace": { "total": 0.076958 },
              "no-loss-of-precision": { "total": 0.019248 },
              "no-misleading-character-class": { "total": 0.014417 },
              "no-nonoctal-decimal-escape": { "total": 0.0057079999999999995 },
              "no-octal": { "total": 0.002623 },
              "no-prototype-builtins": { "total": 0.0052499999999999995 },
              "no-regex-spaces": { "total": 0.018668 },
              "no-self-assign": { "total": 0.003708 },
              "no-shadow-restricted-names": { "total": 0.00775 },
              "no-sparse-arrays": { "total": 0.000291 },
              "no-unsafe-finally": { "total": 0.000334 },
              "no-unsafe-optional-chaining": { "total": 0.015833000000000003 },
              "no-unused-labels": { "total": 0.001458 },
              "no-unused-private-class-members": { "total": 0.000417 },
              "no-useless-backreference": { "total": 0.0045 },
              "no-useless-catch": { "total": 0.00025 },
              "no-useless-escape": { "total": 0.008209 },
              "require-yield": { "total": 0.001374 },
              "use-isnan": { "total": 0.004959 },
              "valid-typeof": { "total": 0.0034159999999999998 },
              "no-var": { "total": 0.001375 },
              "prefer-const": { "total": 0.0030410000000000003 },
              "prefer-rest-params": { "total": 0.005916 },
              "prefer-spread": { "total": 0.005334 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.016 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.004956000000000001
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001542
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.015083 },
              "@typescript-eslint/no-explicit-any": { "total": 0.004125 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001208
              },
              "@typescript-eslint/no-misused-new": { "total": 0.00125 },
              "@typescript-eslint/no-namespace": { "total": 0.0155 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001542
              },
              "@typescript-eslint/no-this-alias": { "total": 0.005125 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.005791
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001333
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.001459
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.015334 },
              "@typescript-eslint/no-unused-vars": { "total": 0.454166 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.002167
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.0012079999999999999
              },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.003084
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.010626
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001208 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.007749999999999999
              },
              "@typescript-eslint/no-empty-function": { "total": 0.015917 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.0053750000000000004
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.004709 },
              "@nx/enforce-module-boundaries": { "total": 0.262334 }
            },
            "fix": { "total": 0 },
            "total": 5.174875
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/models/eslint-stats.schema.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 166,
        "column": 12,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 166,
        "endColumn": 43
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 244,
        "column": 23,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 244,
        "endColumn": 46
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 2,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import { z } from 'zod';\nexport { z };\n\n// Helper function to determine if a file is a test file\nexport function isTestFile(filePath: string): boolean {\n  if (!filePath) return false;\n  const lowerPath = filePath.toLowerCase();\n  return lowerPath.includes('.test.') || lowerPath.includes('.spec.');\n}\n\n// Schemas for parsing raw ESLint lint results\nconst rulePerfStatsSchema = z\n  .object({\n    total: z.number().optional(),\n    fixable: z.union([z.number(), z.boolean()]).optional(),\n  })\n  .passthrough();\n\nconst eslintMessageSchema = z\n  .object({\n    ruleId: z.string().nullable(),\n    severity: z.number(), // ESLint uses 0, 1, 2\n    fix: z.object({}).passthrough().optional(),\n    suggestions: z.array(z.object({}).passthrough()).optional(),\n  })\n  .passthrough();\n\nconst lintResultSchema = z\n  .object({\n    filePath: z.string(),\n    messages: z.array(eslintMessageSchema),\n    stats: z\n      .object({\n        times: z\n          .object({\n            passes: z\n              .array(\n                z\n                  .object({\n                    rules: z\n                      .object({})\n                      .catchall(rulePerfStatsSchema)\n                      .optional(),\n                  })\n                  .optional()\n              )\n              .optional(),\n          })\n          .optional(),\n      })\n      .passthrough()\n      .optional(),\n  })\n  .passthrough();\n\nexport const lintResultsSchema = z.array(lintResultSchema);\ntype RawLintResult = z.infer<typeof lintResultSchema>;\n\n// Schema for the aggregated rule data after processing\nexport const reducedRuleSchema = z.object({\n  identifier: z.string(),\n  timeMs: z.number(),\n  everFixableCli: z.boolean(),\n  everManuallyFixable: z.boolean(),\n  severities: z.array(z.enum(['warning', 'error'])),\n  occurredInTestFiles: z.boolean(),\n  occurredInNonTestFiles: z.boolean(),\n});\n\nexport type ReducedRule = z.infer<typeof reducedRuleSchema>;\n\nexport const ReducedRuleArraySchema = z.array(reducedRuleSchema);\n\nexport const DetailedRuleStatSchema = z.object({\n  filePath: z.string(),\n  ruleId: z.string(),\n  timeMs: z.number(),\n  fixable: z.boolean(),\n  manuallyFixable: z.boolean(),\n  severity: z.number(), // 0,1,2\n  isTestFile: z.boolean(),\n});\nexport type DetailedRuleStat = z.infer<typeof DetailedRuleStatSchema>;\n\nfunction processRawResultsToDetailed(\n  lintResults: RawLintResult[]\n): DetailedRuleStat[] {\n  const allStats: DetailedRuleStat[] = [];\n\n  for (const fileResult of lintResults) {\n    const fileIsTest = isTestFile(fileResult.filePath);\n    const ruleTimes: Record<string, number> = {};\n    const ruleFixable: Record<string, boolean> = {};\n\n    // First, gather all timing and CLI fixability info from stats\n    const ruleStatsMap = fileResult.stats?.times?.passes?.[0]?.rules;\n    if (ruleStatsMap) {\n      for (const [ruleId, rulePerfStats] of Object.entries(ruleStatsMap)) {\n        ruleTimes[ruleId] = rulePerfStats?.total || 0;\n        ruleFixable[ruleId] = !!rulePerfStats?.fixable;\n      }\n    }\n\n    const seenInMessages = new Set<string>();\n\n    // Process messages to gather detailed info\n    for (const message of fileResult.messages) {\n      if (!message.ruleId) continue;\n\n      allStats.push({\n        filePath: fileResult.filePath,\n        ruleId: message.ruleId,\n        timeMs: ruleTimes[message.ruleId] || 0,\n        fixable: ruleFixable[message.ruleId] || !!message.fix,\n        manuallyFixable: !!message.suggestions?.length,\n        severity: message.severity,\n        isTestFile: fileIsTest,\n      });\n      seenInMessages.add(message.ruleId);\n    }\n\n    // Add entries for rules that had timing info but no messages\n    for (const ruleId of Object.keys(ruleTimes)) {\n      if (!seenInMessages.has(ruleId)) {\n        allStats.push({\n          filePath: fileResult.filePath,\n          ruleId: ruleId,\n          timeMs: ruleTimes[ruleId],\n          fixable: ruleFixable[ruleId] || false,\n          manuallyFixable: false,\n          severity: 0, // No severity as there's no message\n          isTestFile: fileIsTest,\n        });\n      }\n    }\n  }\n\n  return allStats;\n}\n\nexport const DetailedRuleStatsSchema = lintResultsSchema.transform(\n  processRawResultsToDetailed\n);\n\n/**\n * Aggregates raw ESLint lint results into a structured format.\n * @param lintResults - An array of raw lint results from ESLint.\n * @returns An array of aggregated rule data.\n */\nfunction aggregateEslintData(lintResults: RawLintResult[]): ReducedRule[] {\n  const aggregatedRuleData = new Map<string, ReducedRule>();\n\n  // Helper to initialize or get a rule's details from the map\n  const getRuleDetails = (ruleId: string): ReducedRule => {\n    if (!aggregatedRuleData.has(ruleId)) {\n      aggregatedRuleData.set(ruleId, {\n        identifier: ruleId,\n        timeMs: 0,\n        everFixableCli: false,\n        everManuallyFixable: false,\n        severities: [],\n        occurredInTestFiles: false,\n        occurredInNonTestFiles: false,\n      });\n    }\n    return aggregatedRuleData.get(ruleId)!;\n  };\n\n  for (const fileResult of lintResults) {\n    const fileIsTest = isTestFile(fileResult.filePath);\n\n    // Process timing information and CLI fixability from rule stats\n    const ruleStatsMap = fileResult.stats?.times?.passes?.[0]?.rules;\n    if (ruleStatsMap) {\n      for (const [ruleId, rulePerfStats] of Object.entries(ruleStatsMap)) {\n        const details = getRuleDetails(ruleId);\n        details.timeMs += rulePerfStats?.total || 0;\n        details.everFixableCli =\n          details.everFixableCli || !!rulePerfStats?.fixable;\n\n        if (fileIsTest) {\n          details.occurredInTestFiles = true;\n        } else {\n          details.occurredInNonTestFiles = true;\n        }\n      }\n    }\n\n    // Process messages for severity, manual fixability, and to confirm occurrences\n    for (const message of fileResult.messages) {\n      if (!message.ruleId) continue; // Skip messages without a ruleId\n\n      const details = getRuleDetails(message.ruleId);\n\n      const warningSeverity = 'warning';\n      const errorSeverity = 'error';\n\n      if (\n        message.severity === 1 &&\n        !details.severities.includes(warningSeverity)\n      ) {\n        details.severities.push(warningSeverity);\n      }\n      if (\n        message.severity === 2 &&\n        !details.severities.includes(errorSeverity)\n      ) {\n        details.severities.push(errorSeverity);\n      }\n\n      details.everFixableCli = details.everFixableCli || !!message.fix;\n      details.everManuallyFixable =\n        details.everManuallyFixable || !!message.suggestions?.length;\n\n      // Ensure occurrence flags are set even if timing data was missing for this rule in this file\n      if (fileIsTest) {\n        details.occurredInTestFiles = true;\n      } else {\n        details.occurredInNonTestFiles = true;\n      }\n    }\n  }\n  return Array.from(aggregatedRuleData.values());\n}\n\nexport function processEslintData(lintResults: RawLintResult[]): ReducedRule[] {\n  const fileData = new Map<string, ReducedRule>();\n\n  for (const fileResult of lintResults) {\n    const fileIsTest = isTestFile(fileResult.filePath);\n    const filePath = fileResult.filePath;\n\n    if (!fileData.has(filePath)) {\n      fileData.set(filePath, {\n        identifier: filePath,\n        timeMs: 0,\n        everFixableCli: false,\n        everManuallyFixable: false,\n        severities: [],\n        occurredInTestFiles: fileIsTest,\n        occurredInNonTestFiles: !fileIsTest,\n      });\n    }\n    const fileEntry = fileData.get(filePath)!;\n\n    const ruleStatsMap = fileResult.stats?.times?.passes?.[0]?.rules;\n    if (ruleStatsMap) {\n      for (const [, rulePerfStats] of Object.entries(ruleStatsMap)) {\n        fileEntry.timeMs += rulePerfStats?.total || 0;\n        fileEntry.everFixableCli =\n          fileEntry.everFixableCli || !!rulePerfStats?.fixable;\n      }\n    }\n\n    for (const message of fileResult.messages) {\n      if (!message.ruleId) continue;\n\n      const warningSeverity = 'warning';\n      const errorSeverity = 'error';\n\n      if (\n        message.severity === 1 &&\n        !fileEntry.severities.includes(warningSeverity)\n      ) {\n        fileEntry.severities.push(warningSeverity);\n      }\n      if (\n        message.severity === 2 &&\n        !fileEntry.severities.includes(errorSeverity)\n      ) {\n        fileEntry.severities.push(errorSeverity);\n      }\n\n      fileEntry.everFixableCli = fileEntry.everFixableCli || !!message.fix;\n      fileEntry.everManuallyFixable =\n        fileEntry.everManuallyFixable || !!message.suggestions?.length;\n    }\n  }\n  return Array.from(fileData.values());\n}\n\nexport const ParsedEslintStatsSchema = lintResultsSchema\n  .transform(aggregateEslintData)\n  .pipe(ReducedRuleArraySchema);\n\nexport const ProcessedFileStatsSchema =\n  lintResultsSchema.transform(processEslintData);\n\nexport const FileRuleStatSchema = reducedRuleSchema.extend({\n  filePath: z.string(),\n});\nexport type FileRuleStat = z.infer<typeof FileRuleStatSchema>;\n\nfunction processForFileRule(lintResults: RawLintResult[]): FileRuleStat[] {\n  const processedData: FileRuleStat[] = [];\n  for (const fileResult of lintResults) {\n    const fileIsTest = isTestFile(fileResult.filePath);\n    const ruleStatsMap = fileResult.stats?.times?.passes?.[0]?.rules;\n    if (ruleStatsMap) {\n      for (const [ruleId, rulePerfStats] of Object.entries(ruleStatsMap)) {\n        processedData.push({\n          identifier: ruleId,\n          filePath: fileResult.filePath,\n          timeMs: rulePerfStats?.total || 0,\n          everFixableCli: !!rulePerfStats?.fixable,\n          everManuallyFixable: false, // This info is in messages\n          severities: [], // This info is in messages\n          occurredInTestFiles: fileIsTest,\n          occurredInNonTestFiles: !fileIsTest,\n        });\n      }\n    }\n  }\n  return processedData;\n}\nexport const ParsedFileAndRuleStatsSchema =\n  lintResultsSchema.transform(processForFileRule);\n\n// Schemas related to TimeEntry, potentially for other parts of the application\n\n// Base schema for core timing and count properties\nexport const TimeEntryCoreSchema = z.object({\n  identifier: z.string(),\n  timeMs: z.number(),\n  warningCount: z.number(),\n  errorCount: z.number(),\n  fixable: z.boolean().optional(),\n  manuallyFixable: z.boolean().optional(),\n});\n\n// TimeEntrySchema: Extends the core schema with recursive children\nexport const TimeEntrySchema: z.ZodType<TimeEntry> = z.lazy(() =>\n  TimeEntryCoreSchema.extend({\n    children: z.array(TimeEntrySchema).optional(),\n  })\n);\n\n// Explicit type for TimeEntry for clarity and use in ZodType\nexport type TimeEntry = z.infer<typeof TimeEntryCoreSchema> & {\n  children?: TimeEntry[];\n};\n\n// ProcessedTimeEntrySchema: Extends the core schema with relativePercent and its own recursive children\nexport const processedTimeEntrySchema: z.ZodType<ProcessedTimeEntry> = z.lazy(\n  () =>\n    TimeEntryCoreSchema.extend({\n      relativePercent: z.number(),\n      children: z.array(processedTimeEntrySchema).optional(), // Recursive children of ProcessedTimeEntry\n    }).transform((entry) => {\n      // Normalize timeMs to be non-negative.\n      // This transform is applied recursively to all children by Zod's lazy schema handling.\n      entry.timeMs = Math.max(0, entry.timeMs);\n      return entry;\n    })\n);\n\n// Explicit type for ProcessedTimeEntry\nexport type ProcessedTimeEntry = z.infer<typeof TimeEntryCoreSchema> & {\n  relativePercent: number;\n  children?: ProcessedTimeEntry[];\n};\n",
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 10.323792 },
            "rules": {
              "for-direction": { "total": 0.004333 },
              "no-async-promise-executor": { "total": 0.000666 },
              "no-case-declarations": { "total": 0.0005 },
              "no-compare-neg-zero": { "total": 0.005915999999999999 },
              "no-cond-assign": { "total": 0.012 },
              "no-constant-binary-expression": {
                "total": 0.031000000000000007
              },
              "no-constant-condition": { "total": 0.029165000000000007 },
              "no-control-regex": { "total": 0.007875000000000002 },
              "no-debugger": { "total": 0.000417 },
              "no-delete-var": { "total": 0.0063739999999999995 },
              "no-dupe-else-if": { "total": 0.13758499999999996 },
              "no-duplicate-case": { "total": 0.001333 },
              "no-empty": { "total": 0.008959000000000002 },
              "no-empty-character-class": { "total": 0.000291 },
              "no-empty-pattern": { "total": 0.016416 },
              "no-empty-static-block": { "total": 0.001 },
              "no-ex-assign": { "total": 0.001083 },
              "no-extra-boolean-cast": { "total": 0.07386800000000002 },
              "no-fallthrough": { "total": 0.06413500000000005 },
              "no-global-assign": { "total": 0.027208 },
              "no-invalid-regexp": { "total": 0.01954100000000001 },
              "no-irregular-whitespace": { "total": 0.030209 },
              "no-loss-of-precision": { "total": 0.025915 },
              "no-misleading-character-class": { "total": 0.016375 },
              "no-nonoctal-decimal-escape": { "total": 0.007624999999999999 },
              "no-octal": { "total": 0.006458 },
              "no-prototype-builtins": { "total": 0.03141500000000002 },
              "no-regex-spaces": { "total": 0.10791900000000008 },
              "no-self-assign": { "total": 0.015374999999999998 },
              "no-shadow-restricted-names": { "total": 0.029582000000000015 },
              "no-sparse-arrays": { "total": 0.0025840000000000004 },
              "no-unsafe-finally": { "total": 0.114749 },
              "no-unsafe-optional-chaining": { "total": 0.09453500000000005 },
              "no-unused-labels": { "total": 0.0017910000000000003 },
              "no-unused-private-class-members": { "total": 0.000333 },
              "no-useless-backreference": { "total": 0.004291 },
              "no-useless-catch": { "total": 0.000333 },
              "no-useless-escape": { "total": 0.010794000000000002 },
              "require-yield": { "total": 0.002627 },
              "use-isnan": { "total": 0.008625 },
              "valid-typeof": { "total": 0.011248000000000003 },
              "no-var": { "total": 0.007706000000000002 },
              "prefer-const": { "total": 0.009374000000000002 },
              "prefer-rest-params": { "total": 0.004958 },
              "prefer-spread": { "total": 0.029211000000000018 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.035666 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.028041000000000014
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001542
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.006001 },
              "@typescript-eslint/no-explicit-any": { "total": 0.00325 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.000958
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001042 },
              "@typescript-eslint/no-namespace": { "total": 0.003333 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.000875
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002792 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.008584
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001209
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.008918000000000002
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.030165000000000008
              },
              "@typescript-eslint/no-unused-vars": { "total": 1.233916 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.008169000000000001
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.019747 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.000917
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.009708000000000001
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.132083 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.047289000000000025
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.11645700000000002
              },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.023537000000000002
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.004291 },
              "@nx/enforce-module-boundaries": { "total": 0.28287499999999977 }
            },
            "fix": { "total": 0 },
            "total": 18.675833
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/reporting/format unit.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 4.008875 },
            "rules": {
              "for-direction": { "total": 0.005875 },
              "no-async-promise-executor": { "total": 0.001958 },
              "no-case-declarations": { "total": 0.001333 },
              "no-compare-neg-zero": { "total": 0.009625 },
              "no-cond-assign": { "total": 0.003375 },
              "no-constant-binary-expression": { "total": 0.003041 },
              "no-constant-condition": { "total": 0.070583 },
              "no-control-regex": { "total": 0.02679100000000002 },
              "no-debugger": { "total": 0.001542 },
              "no-delete-var": { "total": 0.002541 },
              "no-dupe-else-if": { "total": 0.003166 },
              "no-duplicate-case": { "total": 0.001791 },
              "no-empty": { "total": 0.004416 },
              "no-empty-character-class": { "total": 0.001167 },
              "no-empty-pattern": { "total": 0.001708 },
              "no-empty-static-block": { "total": 0.001666 },
              "no-ex-assign": { "total": 0.001375 },
              "no-extra-boolean-cast": { "total": 0.008918 },
              "no-fallthrough": { "total": 0.016959000000000002 },
              "no-global-assign": { "total": 0.025666 },
              "no-invalid-regexp": { "total": 0.005917000000000001 },
              "no-irregular-whitespace": { "total": 0.013415999999999999 },
              "no-loss-of-precision": { "total": 0.17479399999999945 },
              "no-misleading-character-class": {
                "total": 0.018750000000000003
              },
              "no-nonoctal-decimal-escape": { "total": 0.028254000000000015 },
              "no-octal": { "total": 0.02075700000000002 },
              "no-prototype-builtins": { "total": 0.013497 },
              "no-regex-spaces": { "total": 0.041127000000000025 },
              "no-self-assign": { "total": 0.001167 },
              "no-shadow-restricted-names": { "total": 0.012501 },
              "no-sparse-arrays": { "total": 0.007000999999999999 },
              "no-unsafe-finally": { "total": 0.002292 },
              "no-unsafe-optional-chaining": { "total": 0.08833300000000001 },
              "no-unused-labels": { "total": 0.003083 },
              "no-unused-private-class-members": { "total": 0.002333 },
              "no-useless-backreference": { "total": 0.004959 },
              "no-useless-catch": { "total": 0.000833 },
              "no-useless-escape": { "total": 0.025496000000000008 },
              "require-yield": { "total": 0.002583 },
              "use-isnan": { "total": 0.002542 },
              "valid-typeof": { "total": 0.063333 },
              "no-var": { "total": 0.003709000000000001 },
              "prefer-const": { "total": 0.005874000000000001 },
              "prefer-rest-params": { "total": 0.002 },
              "prefer-spread": { "total": 0.008168 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.022458 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.007833999999999999
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.002709
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.005417 },
              "@typescript-eslint/no-explicit-any": { "total": 0.00375 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.002708
              },
              "@typescript-eslint/no-misused-new": { "total": 0.002542 },
              "@typescript-eslint/no-namespace": { "total": 0.003041 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.002084
              },
              "@typescript-eslint/no-this-alias": { "total": 0.003 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.018333
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.002791
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.008085
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.09279200000000001
              },
              "@typescript-eslint/no-unused-vars": { "total": 0.838042 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.006795
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.012584 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.001791
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.012667000000000001
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001792 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.015999999999999997
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.11912500000000002
              },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.025082000000000007
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.002958 },
              "@nx/enforce-module-boundaries": { "total": 0.062835 }
            },
            "fix": { "total": 0 },
            "total": 8.057125
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/reporting/format.ts",
    "messages": [
      {
        "ruleId": "prefer-const",
        "severity": 2,
        "message": "'common' is never reassigned. Use 'const' instead.",
        "line": 30,
        "column": 7,
        "nodeType": "Identifier",
        "messageId": "useConst",
        "endLine": 30,
        "endColumn": 13,
        "fix": {
          "range": [707, 746],
          "text": "const common = firstPath.substring(0, i);"
        }
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 1,
    "fixableWarningCount": 0,
    "source": "import { ProcessedTimeEntry } from '../models/eslint-stats.schema';\n\nexport type FormattedDisplayEntry = {\n  identifier: string;\n  timeMs: string;\n  rawTimeMs: number;\n  relativePercent: string;\n  warningCount: string;\n  errorCount: string;\n  fixable: boolean;\n  manuallyFixable: boolean;\n  children?: FormattedDisplayEntry[];\n};\n\nfunction findCommonBasePath(paths: string[]): string {\n  if (!paths || paths.length <= 1) {\n    return '';\n  }\n  const sortedPaths = [...paths].sort();\n  const firstPath = sortedPaths[0];\n  const lastPath = sortedPaths[sortedPaths.length - 1];\n  let i = 0;\n  while (\n    i < firstPath.length &&\n    i < lastPath.length &&\n    firstPath[i] === lastPath[i]\n  ) {\n    i++;\n  }\n  let common = firstPath.substring(0, i);\n  const lastSlash = common.lastIndexOf('/');\n  if (lastSlash > -1) {\n    // Includes the slash\n    return common.substring(0, lastSlash + 1);\n  }\n  return '';\n}\n\nexport function shortenPath(\n  fullPath: string,\n  commonBasePath: string,\n  maxLength = 50\n): string {\n  const path = fullPath.startsWith(commonBasePath)\n    ? fullPath.substring(commonBasePath.length)\n    : fullPath;\n\n  if (path.length <= maxLength) {\n    return path;\n  }\n\n  const separator = '/';\n  const parts = path.split(separator);\n  if (parts.length === 1) {\n    // It's just a long filename, so truncate it\n    return '...' + path.slice(path.length - maxLength + 3);\n  }\n\n  const fileName = parts.pop() || '';\n\n  if (fileName.length >= maxLength) {\n    return '...' + fileName.slice(fileName.length - maxLength + 3);\n  }\n\n  let shortPath = fileName;\n\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const part = parts[i];\n    if (shortPath.length + part.length + 2 > maxLength) {\n      // +2 for '/...'\n      shortPath = '...' + separator + shortPath;\n      return shortPath;\n    }\n    shortPath = part + separator + shortPath;\n  }\n\n  return shortPath;\n}\n\nexport function createIdentifierFormatter(\n  processedEntries: ProcessedTimeEntry[]\n) {\n  const fileIdentifiers: string[] = [];\n\n  const isFileIdentifier = (identifier: string): boolean =>\n    identifier.includes('/') && identifier.includes('.');\n\n  function collectFileIdentifiers(entries: ProcessedTimeEntry[]) {\n    for (const entry of entries) {\n      if (isFileIdentifier(entry.identifier)) {\n        fileIdentifiers.push(entry.identifier);\n      }\n      if (entry.children) {\n        collectFileIdentifiers(entry.children);\n      }\n    }\n  }\n\n  collectFileIdentifiers(processedEntries);\n  const commonBasePath = findCommonBasePath(fileIdentifiers);\n\n  return (entry: ProcessedTimeEntry): string => {\n    // from user edit\n    const isFileLike = isFileIdentifier(entry.identifier) || !!entry.children;\n\n    if (isFileLike) {\n      return shortenPath(entry.identifier, commonBasePath);\n    }\n    return entry.identifier;\n  };\n}\n\nexport function formatDuration(duration: number, granularity = 2): string {\n  if (duration < 1000) {\n    return `${duration.toFixed(granularity)} ms`;\n  }\n  return `${(duration / 1000).toFixed(2)} s`;\n}\n\nexport function formatPercentage(percentage: number): string {\n  return `${percentage.toFixed(1)}%`;\n}\n\nfunction formatWarningError(entry: ProcessedTimeEntry) {\n  const {\n    warningCount,\n    errorCount,\n    fixable = false,\n    manuallyFixable = false,\n  } = entry;\n  const fixableIcon = fixable ? ' 🔧' : '';\n  const manuallyFixableIcon = manuallyFixable ? ' 💡' : '';\n  const icons = `${fixableIcon}${manuallyFixableIcon}`;\n\n  const formattedWarningCount =\n    warningCount && warningCount !== 0 ? `${warningCount}${icons}` : '';\n  const formattedErrorCount =\n    errorCount && errorCount !== 0 ? `${errorCount}${icons}` : '';\n\n  return {\n    warningCount: formattedWarningCount,\n    errorCount: formattedErrorCount,\n  };\n}\n\nexport function formatAggregatedTimesForDisplay(\n  processedEntries: ProcessedTimeEntry[]\n): FormattedDisplayEntry[] {\n  function findMaxDigits(entries: ProcessedTimeEntry[]) {\n    for (const entry of entries) {\n      if (entry.children) {\n        findMaxDigits(entry.children);\n      }\n    }\n  }\n  findMaxDigits(processedEntries);\n\n  const formatIdentifier = createIdentifierFormatter(processedEntries);\n\n  function formatEntryRecursive(\n    entry: ProcessedTimeEntry\n  ): FormattedDisplayEntry {\n    if (entry.identifier === '...') {\n      return {\n        identifier: '...',\n        timeMs: '',\n        rawTimeMs: 0,\n        relativePercent: '',\n        warningCount: '',\n        errorCount: '',\n        fixable: false,\n        manuallyFixable: false,\n      };\n    }\n\n    const formattedChildren = entry.children\n      ? (entry.children as ProcessedTimeEntry[]).map(formatEntryRecursive)\n      : undefined;\n\n    const identifier = formatIdentifier(entry);\n\n    const { warningCount, errorCount } = formatWarningError(entry);\n\n    return {\n      identifier,\n      timeMs: formatDuration(entry.timeMs),\n      rawTimeMs: entry.timeMs,\n      relativePercent:\n        entry.relativePercent === -1\n          ? 'N/A'\n          : formatPercentage(entry.relativePercent),\n      warningCount,\n      errorCount,\n      fixable: entry.fixable || false,\n      manuallyFixable: entry.manuallyFixable || false,\n      ...(formattedChildren && { children: formattedChildren }),\n    };\n  }\n\n  return processedEntries.map(formatEntryRecursive);\n}\n",
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 4.631625 },
            "rules": {
              "for-direction": { "total": 0.056999999999999995 },
              "no-async-promise-executor": { "total": 0.000625 },
              "no-case-declarations": { "total": 0.000375 },
              "no-compare-neg-zero": { "total": 0.019373000000000005 },
              "no-cond-assign": { "total": 0.011834000000000003 },
              "no-constant-binary-expression": { "total": 0.13520800000000002 },
              "no-constant-condition": { "total": 0.08566600000000002 },
              "no-control-regex": { "total": 0.010712000000000003 },
              "no-debugger": { "total": 0.000458 },
              "no-delete-var": { "total": 0.001123 },
              "no-dupe-else-if": { "total": 0.009291 },
              "no-duplicate-case": { "total": 0.000416 },
              "no-empty": { "total": 0.021332000000000004 },
              "no-empty-character-class": { "total": 0.000917 },
              "no-empty-pattern": { "total": 0.003667 },
              "no-empty-static-block": { "total": 0.000625 },
              "no-ex-assign": { "total": 0.000375 },
              "no-extra-boolean-cast": { "total": 0.013418000000000006 },
              "no-fallthrough": { "total": 0.05425700000000004 },
              "no-global-assign": { "total": 0.027417 },
              "no-invalid-regexp": { "total": 0.010041 },
              "no-irregular-whitespace": { "total": 0.009458 },
              "no-loss-of-precision": { "total": 0.055376000000000015 },
              "no-misleading-character-class": {
                "total": 0.015498999999999999
              },
              "no-nonoctal-decimal-escape": { "total": 0.009086000000000002 },
              "no-octal": { "total": 1.5982549999999998 },
              "no-prototype-builtins": { "total": 0.009709 },
              "no-regex-spaces": { "total": 0.03595700000000002 },
              "no-self-assign": { "total": 0.005042 },
              "no-shadow-restricted-names": { "total": 0.02370900000000001 },
              "no-sparse-arrays": { "total": 0.001165 },
              "no-unsafe-finally": { "total": 0.016211 },
              "no-unsafe-optional-chaining": { "total": 0.03604200000000002 },
              "no-unused-labels": { "total": 0.000625 },
              "no-unused-private-class-members": { "total": 0.000583 },
              "no-useless-backreference": { "total": 0.0035 },
              "no-useless-catch": { "total": 0.00025 },
              "no-useless-escape": { "total": 0.023085000000000012 },
              "require-yield": { "total": 0.006251 },
              "use-isnan": { "total": 0.04000000000000001 },
              "valid-typeof": { "total": 0.0050420000000000005 },
              "no-var": { "total": 0.004791000000000001 },
              "prefer-const": { "total": 0.156582 },
              "prefer-rest-params": { "total": 0.007124 },
              "prefer-spread": { "total": 0.008625 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.018499 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.006751000000000001
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001375
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.005499 },
              "@typescript-eslint/no-explicit-any": { "total": 0.003 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.00125
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001333 },
              "@typescript-eslint/no-namespace": { "total": 0.003042 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001208
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002667 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.007333
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001292
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.004581
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.018750999999999997
              },
              "@typescript-eslint/no-unused-vars": { "total": 0.735041 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.004958000000000001
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.007580000000000001
              },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.000958
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.011459
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001041 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.04250200000000001
              },
              "@typescript-eslint/no-empty-function": { "total": 0.076001 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.019004000000000004
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.002125 },
              "@nx/enforce-module-boundaries": { "total": 0.050875000000000004 }
            },
            "fix": { "total": 0 },
            "total": 11.138375
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/reporting/format.unit.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 7.241333 },
            "rules": {
              "for-direction": { "total": 0.005125 },
              "no-async-promise-executor": { "total": 0.000625 },
              "no-case-declarations": { "total": 0.000292 },
              "no-compare-neg-zero": { "total": 0.0015 },
              "no-cond-assign": { "total": 0.003 },
              "no-constant-binary-expression": { "total": 0.001584 },
              "no-constant-condition": { "total": 0.003084 },
              "no-control-regex": { "total": 0.059166000000000045 },
              "no-debugger": { "total": 0.000292 },
              "no-delete-var": { "total": 0.001124 },
              "no-dupe-else-if": { "total": 0.001584 },
              "no-duplicate-case": { "total": 0.001042 },
              "no-empty": { "total": 0.004874000000000001 },
              "no-empty-character-class": { "total": 0.00025 },
              "no-empty-pattern": { "total": 0.001125 },
              "no-empty-static-block": { "total": 0.001125 },
              "no-ex-assign": { "total": 0.001292 },
              "no-extra-boolean-cast": { "total": 0.01658300000000001 },
              "no-fallthrough": { "total": 0.02174 },
              "no-global-assign": { "total": 0.023749000000000003 },
              "no-invalid-regexp": { "total": 0.087372 },
              "no-irregular-whitespace": { "total": 0.018167 },
              "no-loss-of-precision": { "total": 0.28015799999999785 },
              "no-misleading-character-class": { "total": 0.017876 },
              "no-nonoctal-decimal-escape": { "total": 0.05690300000000003 },
              "no-octal": { "total": 0.04595200000000003 },
              "no-prototype-builtins": { "total": 0.01796400000000001 },
              "no-regex-spaces": { "total": 0.11246300000000009 },
              "no-self-assign": { "total": 0.001791 },
              "no-shadow-restricted-names": { "total": 0.020085000000000006 },
              "no-sparse-arrays": { "total": 0.008165 },
              "no-unsafe-finally": { "total": 0.0005 },
              "no-unsafe-optional-chaining": { "total": 0.02508500000000001 },
              "no-unused-labels": { "total": 0.0015 },
              "no-unused-private-class-members": { "total": 0.000375 },
              "no-useless-backreference": { "total": 0.0040420000000000005 },
              "no-useless-catch": { "total": 0.000208 },
              "no-useless-escape": { "total": 0.06836800000000004 },
              "require-yield": { "total": 0.000459 },
              "use-isnan": { "total": 0.002291 },
              "valid-typeof": { "total": 0.0037080000000000004 },
              "no-var": { "total": 0.003918000000000001 },
              "prefer-const": { "total": 0.005667000000000002 },
              "prefer-rest-params": { "total": 0.001041 },
              "prefer-spread": { "total": 0.018791000000000006 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.092625 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.014828000000000001
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001417
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.013584 },
              "@typescript-eslint/no-explicit-any": { "total": 0.004042 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001292
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001209 },
              "@typescript-eslint/no-namespace": { "total": 0.002542 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002458 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.007875
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001292
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.0035009999999999998
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.03496100000000002
              },
              "@typescript-eslint/no-unused-vars": { "total": 0.817333 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.003915999999999999
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.009623000000000001
              },
              "@typescript-eslint/prefer-namespace-keyword": { "total": 0.001 },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.010458
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.000959 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.025247000000000006
              },
              "@typescript-eslint/no-empty-function": { "total": 0.237876 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.011667000000000005
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.002125 },
              "@nx/enforce-module-boundaries": { "total": 0.341832 }
            },
            "fix": { "total": 0 },
            "total": 14.6515
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/reporting/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 0.446542 },
            "rules": {
              "for-direction": { "total": 0.006708 },
              "no-async-promise-executor": { "total": 0.000458 },
              "no-case-declarations": { "total": 0.000292 },
              "no-compare-neg-zero": { "total": 0.000917 },
              "no-cond-assign": { "total": 0.008666 },
              "no-constant-binary-expression": { "total": 0.000333 },
              "no-constant-condition": { "total": 0.001083 },
              "no-control-regex": { "total": 0.0009580000000000001 },
              "no-debugger": { "total": 0.000208 },
              "no-delete-var": { "total": 0.000291 },
              "no-dupe-else-if": { "total": 0.000416 },
              "no-duplicate-case": { "total": 0.000333 },
              "no-empty": { "total": 0.002666 },
              "no-empty-character-class": { "total": 0.00025 },
              "no-empty-pattern": { "total": 0.001375 },
              "no-empty-static-block": { "total": 0.000333 },
              "no-ex-assign": { "total": 0.000375 },
              "no-extra-boolean-cast": { "total": 0.001542 },
              "no-fallthrough": { "total": 0.002751 },
              "no-global-assign": { "total": 0.021792 },
              "no-invalid-regexp": { "total": 0.002583 },
              "no-irregular-whitespace": { "total": 0.003625 },
              "no-loss-of-precision": { "total": 0.001041 },
              "no-misleading-character-class": {
                "total": 0.014707999999999999
              },
              "no-nonoctal-decimal-escape": { "total": 0.001166 },
              "no-octal": { "total": 0.0006249999999999999 },
              "no-prototype-builtins": { "total": 0.000459 },
              "no-regex-spaces": { "total": 0.00075 },
              "no-self-assign": { "total": 0.002208 },
              "no-shadow-restricted-names": { "total": 0.002834 },
              "no-sparse-arrays": { "total": 0.000375 },
              "no-unsafe-finally": { "total": 0.000292 },
              "no-unsafe-optional-chaining": { "total": 0.001167 },
              "no-unused-labels": { "total": 0.0005 },
              "no-unused-private-class-members": { "total": 0.000667 },
              "no-useless-backreference": { "total": 0.0034579999999999997 },
              "no-useless-catch": { "total": 0.000375 },
              "no-useless-escape": { "total": 0.002791 },
              "require-yield": { "total": 0.000417 },
              "use-isnan": { "total": 0.001125 },
              "valid-typeof": { "total": 0.001625 },
              "no-var": { "total": 0.000459 },
              "prefer-const": { "total": 0.001542 },
              "prefer-rest-params": { "total": 0.0005 },
              "prefer-spread": { "total": 0.00025 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.016333 },
              "@typescript-eslint/no-array-constructor": { "total": 0.001833 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.005792
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.006041 },
              "@typescript-eslint/no-explicit-any": { "total": 0.009 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.00125
              },
              "@typescript-eslint/no-misused-new": { "total": 0.00125 },
              "@typescript-eslint/no-namespace": { "total": 0.002875 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002458 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.009958
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001458
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.001208
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.009791 },
              "@typescript-eslint/no-unused-vars": {
                "total": 0.37004200000000004
              },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.00425
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.000917 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.000959
              },
              "@typescript-eslint/triple-slash-reference": { "total": 0.00775 },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001042 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.002209
              },
              "@typescript-eslint/no-empty-function": { "total": 0.004958 },
              "@typescript-eslint/no-inferrable-types": { "total": 0.004667 },
              "@typescript-eslint/no-empty-interface": { "total": 0.002292 },
              "@nx/enforce-module-boundaries": { "total": 0.066751 }
            },
            "fix": { "total": 0 },
            "total": 2.0155
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/reporting/render-table.ts",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "no-control-regex",
        "severity": 2,
        "message": "Unexpected control character(s) in regular expression: \\x1b.",
        "line": 65,
        "column": 22,
        "nodeType": "Literal",
        "messageId": "unexpected",
        "endLine": 65,
        "endColumn": 41,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 5.675458 },
            "rules": {
              "for-direction": { "total": 0.003417 },
              "no-async-promise-executor": { "total": 0.000666 },
              "no-case-declarations": { "total": 0.000333 },
              "no-compare-neg-zero": { "total": 0.031001000000000004 },
              "no-cond-assign": { "total": 0.007041999999999998 },
              "no-constant-binary-expression": { "total": 0.06863100000000004 },
              "no-constant-condition": { "total": 0.03308300000000001 },
              "no-control-regex": { "total": 1.045168 },
              "no-debugger": { "total": 0.000333 },
              "no-delete-var": { "total": 0.000916 },
              "no-dupe-else-if": { "total": 0.01846 },
              "no-duplicate-case": { "total": 0.000334 },
              "no-empty": { "total": 0.006708000000000001 },
              "no-empty-character-class": { "total": 0.017375 },
              "no-empty-pattern": { "total": 0.001458 },
              "no-empty-static-block": { "total": 0.0005 },
              "no-ex-assign": { "total": 0.0005 },
              "no-extra-boolean-cast": { "total": 0.012335000000000002 },
              "no-fallthrough": { "total": 0.05116500000000004 },
              "no-global-assign": { "total": 0.028916 },
              "no-invalid-regexp": { "total": 0.011749000000000006 },
              "no-irregular-whitespace": { "total": 0.05125 },
              "no-loss-of-precision": { "total": 0.06874900000000002 },
              "no-misleading-character-class": { "total": 2.2631249999999996 },
              "no-nonoctal-decimal-escape": { "total": 0.02471000000000001 },
              "no-octal": { "total": 0.013296000000000006 },
              "no-prototype-builtins": { "total": 0.03866800000000001 },
              "no-regex-spaces": { "total": 0.16212499999999955 },
              "no-self-assign": { "total": 0.0055 },
              "no-shadow-restricted-names": { "total": 0.03178800000000001 },
              "no-sparse-arrays": { "total": 0.0025420000000000004 },
              "no-unsafe-finally": { "total": 0.014667 },
              "no-unsafe-optional-chaining": { "total": 0.04783700000000003 },
              "no-unused-labels": { "total": 0.000667 },
              "no-unused-private-class-members": { "total": 0.000333 },
              "no-useless-backreference": { "total": 0.37720800000000004 },
              "no-useless-catch": { "total": 0.00025 },
              "no-useless-escape": { "total": 0.699374 },
              "require-yield": { "total": 0.018791000000000002 },
              "use-isnan": { "total": 0.019881000000000006 },
              "valid-typeof": { "total": 0.002916 },
              "no-var": { "total": 0.006415000000000002 },
              "prefer-const": { "total": 0.017501000000000003 },
              "prefer-rest-params": { "total": 0.004457 },
              "prefer-spread": { "total": 0.015289000000000004 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.020959 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.010666000000000002
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001375
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.004874 },
              "@typescript-eslint/no-explicit-any": { "total": 0.003 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001209
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001083 },
              "@typescript-eslint/no-namespace": { "total": 0.002375 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001083
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002292 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.006833
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.00125
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.0029170000000000003
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.023417000000000007
              },
              "@typescript-eslint/no-unused-vars": { "total": 1.053708 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.002999
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.07816700000000001
              },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.001083
              },
              "@typescript-eslint/triple-slash-reference": { "total": 0.00825 },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.000875 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.04666700000000002
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.28858200000000006
              },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.026293000000000014
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.001958 },
              "@nx/enforce-module-boundaries": { "total": 0.04025 }
            },
            "fix": { "total": 0 },
            "total": 15.565083
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/reporting/render-table.unit.test.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'testData' is assigned a value but never used.",
        "line": 7,
        "column": 7,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 7,
        "endColumn": 15
      },
      {
        "ruleId": "@typescript-eslint/no-empty-function",
        "severity": 2,
        "message": "Unexpected empty arrow function.",
        "line": 12,
        "column": 68,
        "nodeType": "ArrowFunctionExpression",
        "messageId": "unexpected",
        "endLine": 12,
        "endColumn": 70
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import { vi, describe, it, expect, beforeEach, afterEach } from 'vitest';\nimport { renderTable } from './render-table';\nimport { FormattedDisplayEntry } from './format';\n\ndescribe('render-table', () => {\n  let consoleSpy: ReturnType<typeof vi.spyOn>;\n  let testData: FormattedDisplayEntry[];\n\n  beforeEach(() => {\n    // Reset test data before each test\n    testData = [];\n    consoleSpy = vi.spyOn(console, 'log').mockImplementation(() => {});\n  });\n  afterEach(() => {\n    vi.restoreAllMocks();\n  });\n\n  it('should print a formatted table with a single entry', () => {\n    const testData: FormattedDisplayEntry[] = [\n      {\n        identifier: 'rule-A',\n        timeMs: '100 ms',\n        rawTimeMs: 100,\n        relativePercent: '100.0%',\n        warningCount: '0',\n        errorCount: '0',\n      },\n    ];\n    renderTable(testData);\n    const output = consoleSpy.mock.calls[0][0] as string;\n    const expectedOutput = [\n      'Rule   | Time (ms) | %     ',\n      ':-----|:---------|--------:',\n      'rule-A | 100 ms    | 100.0%',\n    ].join('\\n');\n    expect(output).toBe(expectedOutput);\n  });\n\n  it('should print a formatted table with multiple entries', () => {\n    const testData: FormattedDisplayEntry[] = [\n      {\n        identifier: 'rule-A',\n        timeMs: '100 ms',\n        rawTimeMs: 100,\n        relativePercent: '50.0%',\n        warningCount: '0',\n        errorCount: '0',\n      },\n      {\n        identifier: 'rule-B',\n        timeMs: '100 ms',\n        rawTimeMs: 100,\n        relativePercent: '50.0%',\n        warningCount: '0',\n        errorCount: '0',\n      },\n    ];\n    renderTable(testData);\n    const output = consoleSpy.mock.calls[0][0] as string;\n    const expectedOutput = [\n      'Rule   | Time (ms) | %    ',\n      ':-----|:---------|------:',\n      'rule-A | 100 ms    | 50.0%',\n      'rule-B | 100 ms    | 50.0%',\n    ].join('\\n');\n    expect(output).toBe(expectedOutput);\n  });\n\n  it('should print a formatted table with nested entries', () => {\n    const testData: FormattedDisplayEntry[] = [\n      {\n        identifier: 'file-A',\n        timeMs: '200 ms',\n        rawTimeMs: 200,\n        relativePercent: '100.0%',\n        warningCount: '0',\n        errorCount: '0',\n        children: [\n          {\n            identifier: 'rule-A',\n            timeMs: '100 ms',\n            rawTimeMs: 100,\n            relativePercent: '50.0%',\n            warningCount: '0',\n            errorCount: '0',\n          },\n          {\n            identifier: 'rule-B',\n            timeMs: '100 ms',\n            rawTimeMs: 100,\n            relativePercent: '50.0%',\n            warningCount: '0',\n            errorCount: '0',\n          },\n        ],\n      },\n    ];\n    renderTable(testData);\n    const output = consoleSpy.mock.calls[0][0] as string;\n    const expectedOutput = [\n      'Rule     | Time (ms) | %     ',\n      ':--------|:---------|-------:',\n      '  rule-A   | 100 ms    | 50.0%',\n      '  rule-B   | 100 ms    | 50.0%',\n    ].join('\\n');\n    expect(output).toBe(expectedOutput);\n  });\n\n  it('should correctly align columns based on content width', () => {\n    const testData: FormattedDisplayEntry[] = [\n      {\n        identifier: 'a-very-long-rule-name',\n        timeMs: '10.123 ms',\n        rawTimeMs: 10.123,\n        relativePercent: '18.8%',\n        warningCount: '0',\n        errorCount: '0',\n      },\n    ];\n    renderTable(testData);\n    const output = consoleSpy.mock.calls[0][0] as string;\n    const expectedOutput = [\n      'Rule                  | Time (ms) | %    ',\n      ':---------------------|:---------|------:',\n      'a-very-long-rule-name | 10.123 ms | 18.8%',\n    ].join('\\n');\n    expect(output).toBe(expectedOutput);\n  });\n\n  it('should handle empty data array', () => {\n    const testData: FormattedDisplayEntry[] = [];\n    renderTable(testData);\n    expect(consoleSpy).toHaveBeenCalledTimes(1);\n    expect(consoleSpy).toHaveBeenCalledWith('No data to display.');\n  });\n\n  it('should handle entries with empty children array', () => {\n    const testData: FormattedDisplayEntry[] = [\n      {\n        identifier: 'file-A',\n        timeMs: '200 ms',\n        rawTimeMs: 200,\n        relativePercent: '100.0%',\n        warningCount: '0',\n        errorCount: '0',\n        children: [],\n      },\n    ];\n    renderTable(testData);\n    const output = consoleSpy.mock.calls[0][0] as string;\n    const expectedOutput = [\n      'Rule   | Time (ms) | %     ',\n      ':-----|:---------|-------:',\n      'file-A | 200 ms    | 100.0%',\n    ].join('\\n');\n    expect(output).toBe(expectedOutput);\n  });\n});\n",
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 2.685291 },
            "rules": {
              "for-direction": { "total": 0.002333 },
              "no-async-promise-executor": { "total": 0.000416 },
              "no-case-declarations": { "total": 0.00025 },
              "no-compare-neg-zero": { "total": 0.000958 },
              "no-cond-assign": { "total": 0.001041 },
              "no-constant-binary-expression": { "total": 0.000333 },
              "no-constant-condition": { "total": 0.00125 },
              "no-control-regex": { "total": 0.016164 },
              "no-debugger": { "total": 0.00025 },
              "no-delete-var": { "total": 0.000291 },
              "no-dupe-else-if": { "total": 0.000417 },
              "no-duplicate-case": { "total": 0.000333 },
              "no-empty": { "total": 0.036293000000000006 },
              "no-empty-character-class": { "total": 0.000291 },
              "no-empty-pattern": { "total": 0.0005 },
              "no-empty-static-block": { "total": 0.00025 },
              "no-ex-assign": { "total": 0.000417 },
              "no-extra-boolean-cast": { "total": 0.0069570000000000005 },
              "no-fallthrough": { "total": 0.011251000000000002 },
              "no-global-assign": { "total": 0.022459 },
              "no-invalid-regexp": { "total": 0.007665000000000002 },
              "no-irregular-whitespace": { "total": 0.008666 },
              "no-loss-of-precision": { "total": 0.036584000000000005 },
              "no-misleading-character-class": { "total": 0.012791 },
              "no-nonoctal-decimal-escape": { "total": 0.014085000000000006 },
              "no-octal": { "total": 0.011415999999999999 },
              "no-prototype-builtins": { "total": 0.008461 },
              "no-regex-spaces": { "total": 0.04004100000000002 },
              "no-self-assign": { "total": 0.054792 },
              "no-shadow-restricted-names": { "total": 0.011792 },
              "no-sparse-arrays": { "total": 0.00379 },
              "no-unsafe-finally": { "total": 0.000375 },
              "no-unsafe-optional-chaining": { "total": 0.018001000000000003 },
              "no-unused-labels": { "total": 0.000541 },
              "no-unused-private-class-members": { "total": 0.000334 },
              "no-useless-backreference": { "total": 0.004208 },
              "no-useless-catch": { "total": 0.000208 },
              "no-useless-escape": { "total": 0.021627000000000014 },
              "require-yield": { "total": 0.000416 },
              "use-isnan": { "total": 0.001292 },
              "valid-typeof": { "total": 0.0014579999999999999 },
              "no-var": { "total": 0.0025430000000000014 },
              "prefer-const": { "total": 0.014458000000000002 },
              "prefer-rest-params": { "total": 0.0005 },
              "prefer-spread": { "total": 0.008540000000000002 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.011667 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.0068319999999999995
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001333
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.004 },
              "@typescript-eslint/no-explicit-any": { "total": 0.002958 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001041 },
              "@typescript-eslint/no-namespace": { "total": 0.002292 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.000875
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002375 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.004833
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001083
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.002836
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.02283500000000001
              },
              "@typescript-eslint/no-unused-vars": { "total": 2.248208 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.0033759999999999997
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.007085 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.000833
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.0077080000000000004
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.000834 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.015333999999999999
              },
              "@typescript-eslint/no-empty-function": { "total": 0.083376 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.07246100000000001
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.002416 },
              "@nx/enforce-module-boundaries": { "total": 0.10537500000000001 }
            },
            "fix": { "total": 0 },
            "total": 7.238208
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/reporting/table-headers.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 0.708625 },
            "rules": {
              "for-direction": { "total": 0.002458 },
              "no-async-promise-executor": { "total": 0.000375 },
              "no-case-declarations": { "total": 0.000375 },
              "no-compare-neg-zero": { "total": 0.002708 },
              "no-cond-assign": { "total": 0.0018750000000000001 },
              "no-constant-binary-expression": { "total": 0.003959 },
              "no-constant-condition": { "total": 0.006208999999999999 },
              "no-control-regex": { "total": 0.002958 },
              "no-debugger": { "total": 0.00025 },
              "no-delete-var": { "total": 0.000292 },
              "no-dupe-else-if": { "total": 0.0027099999999999997 },
              "no-duplicate-case": { "total": 0.0005 },
              "no-empty": { "total": 0.0014160000000000002 },
              "no-empty-character-class": { "total": 0.00025 },
              "no-empty-pattern": { "total": 0.000667 },
              "no-empty-static-block": { "total": 0.00025 },
              "no-ex-assign": { "total": 0.000292 },
              "no-extra-boolean-cast": { "total": 0.001291 },
              "no-fallthrough": { "total": 0.008296 },
              "no-global-assign": { "total": 0.023333 },
              "no-invalid-regexp": { "total": 0.003416 },
              "no-irregular-whitespace": { "total": 0.0024159999999999997 },
              "no-loss-of-precision": { "total": 0.0025000000000000005 },
              "no-misleading-character-class": {
                "total": 0.011375000000000001
              },
              "no-nonoctal-decimal-escape": { "total": 0.002291 },
              "no-octal": { "total": 0.0014180000000000002 },
              "no-prototype-builtins": { "total": 0.000541 },
              "no-regex-spaces": { "total": 0.0017510000000000002 },
              "no-self-assign": { "total": 0.000708 },
              "no-shadow-restricted-names": { "total": 0.002541 },
              "no-sparse-arrays": { "total": 0.000917 },
              "no-unsafe-finally": { "total": 0.0037500000000000003 },
              "no-unsafe-optional-chaining": { "total": 0.0017499999999999998 },
              "no-unused-labels": { "total": 0.000375 },
              "no-unused-private-class-members": { "total": 0.0005 },
              "no-useless-backreference": { "total": 0.003542 },
              "no-useless-catch": { "total": 0.000459 },
              "no-useless-escape": { "total": 0.006209000000000001 },
              "require-yield": { "total": 0.001461 },
              "use-isnan": { "total": 0.003335 },
              "valid-typeof": { "total": 0.001875 },
              "no-var": { "total": 0.000375 },
              "prefer-const": { "total": 0.001292 },
              "prefer-rest-params": { "total": 0.002167 },
              "prefer-spread": { "total": 0.000375 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.010624 },
              "@typescript-eslint/no-array-constructor": { "total": 0.001667 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001125
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.003875 },
              "@typescript-eslint/no-explicit-any": { "total": 0.003083 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001
              },
              "@typescript-eslint/no-misused-new": { "total": 0.00125 },
              "@typescript-eslint/no-namespace": { "total": 0.002458 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.000958
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.005625
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.00125
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.000916
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.009291 },
              "@typescript-eslint/no-unused-vars": { "total": 0.462749 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.001708
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.001 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.000875
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.005917
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.000875 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.007958999999999999
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.013791000000000001
              },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.005083000000000001
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.001958 },
              "@nx/enforce-module-boundaries": { "total": 0.017666 }
            },
            "fix": { "total": 0 },
            "total": 2.376583
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/reporting/terminal-format.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 2.947459 },
            "rules": {
              "for-direction": { "total": 0.008959 },
              "no-async-promise-executor": { "total": 0.000583 },
              "no-case-declarations": { "total": 0.000333 },
              "no-compare-neg-zero": { "total": 0.008374000000000001 },
              "no-cond-assign": { "total": 0.004999 },
              "no-constant-binary-expression": {
                "total": 0.020999000000000004
              },
              "no-constant-condition": { "total": 0.017626000000000003 },
              "no-control-regex": { "total": 0.09550099999999999 },
              "no-debugger": { "total": 0.00025 },
              "no-delete-var": { "total": 0.000626 },
              "no-dupe-else-if": { "total": 0.027624 },
              "no-duplicate-case": { "total": 0.000292 },
              "no-empty": { "total": 0.003542000000000001 },
              "no-empty-character-class": { "total": 0.006542000000000001 },
              "no-empty-pattern": { "total": 0.002 },
              "no-empty-static-block": { "total": 0.000375 },
              "no-ex-assign": { "total": 0.000417 },
              "no-extra-boolean-cast": { "total": 0.008417999999999998 },
              "no-fallthrough": { "total": 0.03128300000000001 },
              "no-global-assign": { "total": 0.020458 },
              "no-invalid-regexp": { "total": 0.006750000000000001 },
              "no-irregular-whitespace": { "total": 0.009706999999999999 },
              "no-loss-of-precision": { "total": 0.038997000000000004 },
              "no-misleading-character-class": { "total": 0.14795800000000003 },
              "no-nonoctal-decimal-escape": { "total": 0.007374000000000001 },
              "no-octal": { "total": 0.0062910000000000015 },
              "no-prototype-builtins": { "total": 0.008373000000000002 },
              "no-regex-spaces": { "total": 0.03529600000000002 },
              "no-self-assign": { "total": 0.006457999999999999 },
              "no-shadow-restricted-names": { "total": 0.015246999999999998 },
              "no-sparse-arrays": { "total": 0.000292 },
              "no-unsafe-finally": { "total": 0.006335 },
              "no-unsafe-optional-chaining": { "total": 0.02658700000000002 },
              "no-unused-labels": { "total": 0.000583 },
              "no-unused-private-class-members": { "total": 0.000417 },
              "no-useless-backreference": { "total": 0.042706999999999995 },
              "no-useless-catch": { "total": 0.00025 },
              "no-useless-escape": { "total": 0.125462 },
              "require-yield": { "total": 0.002334 },
              "use-isnan": { "total": 0.008665 },
              "valid-typeof": { "total": 0.002708 },
              "no-var": { "total": 0.0036660000000000013 },
              "prefer-const": { "total": 0.09666899999999999 },
              "prefer-rest-params": { "total": 0.00375 },
              "prefer-spread": { "total": 0.007206 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.022125 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.009625000000000002
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001292
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.005958 },
              "@typescript-eslint/no-explicit-any": { "total": 0.003833 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.00125
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001041 },
              "@typescript-eslint/no-namespace": { "total": 0.003166 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001125
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002709 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.007375
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001333
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.002791
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.019958000000000004
              },
              "@typescript-eslint/no-unused-vars": { "total": 0.649792 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.010085
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.005000000000000001
              },
              "@typescript-eslint/prefer-namespace-keyword": { "total": 0.001 },
              "@typescript-eslint/triple-slash-reference": { "total": 0.01004 },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.000833 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.025669
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.060001000000000006
              },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.010752000000000005
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.002375 },
              "@nx/enforce-module-boundaries": { "total": 0.484707 }
            },
            "fix": { "total": 0 },
            "total": 8.655333
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/stats/calc-times.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 2.033375 },
            "rules": {
              "for-direction": { "total": 0.005416 },
              "no-async-promise-executor": { "total": 0.001875 },
              "no-case-declarations": { "total": 0.000333 },
              "no-compare-neg-zero": { "total": 0.005584 },
              "no-cond-assign": { "total": 0.0042060000000000005 },
              "no-constant-binary-expression": {
                "total": 0.013040000000000003
              },
              "no-constant-condition": { "total": 0.013914000000000001 },
              "no-control-regex": { "total": 0.002834 },
              "no-debugger": { "total": 0.000209 },
              "no-delete-var": { "total": 0.000792 },
              "no-dupe-else-if": { "total": 0.001958 },
              "no-duplicate-case": { "total": 0.00025 },
              "no-empty": { "total": 0.0024160000000000006 },
              "no-empty-character-class": { "total": 0.000333 },
              "no-empty-pattern": { "total": 0.0005 },
              "no-empty-static-block": { "total": 0.000375 },
              "no-ex-assign": { "total": 0.000292 },
              "no-extra-boolean-cast": { "total": 0.004043 },
              "no-fallthrough": { "total": 0.02104300000000001 },
              "no-global-assign": { "total": 0.04525 },
              "no-invalid-regexp": { "total": 0.0024180000000000004 },
              "no-irregular-whitespace": { "total": 0.004916 },
              "no-loss-of-precision": { "total": 0.025168 },
              "no-misleading-character-class": { "total": 0.012458 },
              "no-nonoctal-decimal-escape": { "total": 0.0023740000000000002 },
              "no-octal": { "total": 0.0025020000000000003 },
              "no-prototype-builtins": { "total": 0.0037059999999999997 },
              "no-regex-spaces": { "total": 0.013169000000000002 },
              "no-self-assign": { "total": 0.0008339999999999999 },
              "no-shadow-restricted-names": { "total": 0.009040999999999999 },
              "no-sparse-arrays": { "total": 0.0007499999999999999 },
              "no-unsafe-finally": { "total": 0.005875999999999999 },
              "no-unsafe-optional-chaining": { "total": 0.013288999999999999 },
              "no-unused-labels": { "total": 0.000459 },
              "no-unused-private-class-members": { "total": 0.000333 },
              "no-useless-backreference": { "total": 0.0036239999999999996 },
              "no-useless-catch": { "total": 0.000209 },
              "no-useless-escape": { "total": 0.00421 },
              "require-yield": { "total": 0.003166 },
              "use-isnan": { "total": 0.0061259999999999995 },
              "valid-typeof": { "total": 0.002542 },
              "no-var": { "total": 0.001958 },
              "prefer-const": { "total": 0.012125 },
              "prefer-rest-params": { "total": 0.0032490000000000006 },
              "prefer-spread": { "total": 0.00321 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.009292 },
              "@typescript-eslint/no-array-constructor": { "total": 0.003625 },
              "@typescript-eslint/no-duplicate-enum-values": { "total": 0.001 },
              "@typescript-eslint/no-empty-object-type": { "total": 0.003625 },
              "@typescript-eslint/no-explicit-any": { "total": 0.00225 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001042 },
              "@typescript-eslint/no-namespace": { "total": 0.002958 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002458 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.0045
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001083
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.004084
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.010499999999999999
              },
              "@typescript-eslint/no-unused-vars": {
                "total": 0.6124989999999999
              },
              "@typescript-eslint/no-wrapper-object-types": { "total": 0.005 },
              "@typescript-eslint/prefer-as-const": { "total": 0.047958 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.000833
              },
              "@typescript-eslint/triple-slash-reference": { "total": 0.007 },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.000791 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.014791000000000002
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.037040000000000003
              },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.050084000000000004
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.003125 },
              "@nx/enforce-module-boundaries": { "total": 0.036793 }
            },
            "fix": { "total": 0 },
            "total": 4.520833
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/stats/calc-times.unit.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 2.321708 },
            "rules": {
              "for-direction": { "total": 0.002667 },
              "no-async-promise-executor": { "total": 0.000542 },
              "no-case-declarations": { "total": 0.000375 },
              "no-compare-neg-zero": { "total": 0.005376 },
              "no-cond-assign": { "total": 0.001125 },
              "no-constant-binary-expression": {
                "total": 0.008584000000000001
              },
              "no-constant-condition": { "total": 0.001209 },
              "no-control-regex": { "total": 0.017088000000000006 },
              "no-debugger": { "total": 0.000292 },
              "no-delete-var": { "total": 0.001667 },
              "no-dupe-else-if": { "total": 0.000458 },
              "no-duplicate-case": { "total": 0.000375 },
              "no-empty": { "total": 0.0021670000000000005 },
              "no-empty-character-class": { "total": 0.000375 },
              "no-empty-pattern": { "total": 0.000583 },
              "no-empty-static-block": { "total": 0.000792 },
              "no-ex-assign": { "total": 0.000375 },
              "no-extra-boolean-cast": { "total": 0.012665000000000004 },
              "no-fallthrough": { "total": 0.019123000000000005 },
              "no-global-assign": { "total": 0.020749 },
              "no-invalid-regexp": { "total": 0.010628000000000005 },
              "no-irregular-whitespace": { "total": 0.008709 },
              "no-loss-of-precision": { "total": 0.10437900000000007 },
              "no-misleading-character-class": { "total": 0.012041 },
              "no-nonoctal-decimal-escape": { "total": 0.017167000000000005 },
              "no-octal": { "total": 0.014502000000000008 },
              "no-prototype-builtins": { "total": 0.014833000000000006 },
              "no-regex-spaces": { "total": 0.050168000000000025 },
              "no-self-assign": { "total": 0.000625 },
              "no-shadow-restricted-names": { "total": 0.011000000000000001 },
              "no-sparse-arrays": { "total": 0.004874 },
              "no-unsafe-finally": { "total": 0.000417 },
              "no-unsafe-optional-chaining": { "total": 0.026543000000000018 },
              "no-unused-labels": { "total": 0.000458 },
              "no-unused-private-class-members": { "total": 0.000542 },
              "no-useless-backreference": { "total": 0.0035 },
              "no-useless-catch": { "total": 0.000333 },
              "no-useless-escape": { "total": 0.02104000000000001 },
              "require-yield": { "total": 0.000375 },
              "use-isnan": { "total": 0.0033320000000000003 },
              "valid-typeof": { "total": 0.0035020000000000003 },
              "no-var": { "total": 0.0016680000000000002 },
              "prefer-const": { "total": 0.003416 },
              "prefer-rest-params": { "total": 0.000333 },
              "prefer-spread": { "total": 0.013708000000000007 },
              "@typescript-eslint/ban-ts-comment": {
                "total": 0.013417000000000002
              },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.010501000000000003
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001125
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.003917 },
              "@typescript-eslint/no-explicit-any": { "total": 0.002583 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001125
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001 },
              "@typescript-eslint/no-namespace": { "total": 0.00225 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.000958
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002042 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.025542
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001125
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.002624
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.02829100000000001
              },
              "@typescript-eslint/no-unused-vars": { "total": 0.443917 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.003291
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.003626 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.000917
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.007875
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.000791 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.014669
              },
              "@typescript-eslint/no-empty-function": { "total": 0.061542 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.009788999999999999
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.00175 },
              "@nx/enforce-module-boundaries": { "total": 0.117417 }
            },
            "fix": { "total": 0 },
            "total": 5.294541
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/stats/filter.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 0.906042 },
            "rules": {
              "for-direction": { "total": 0.00275 },
              "no-async-promise-executor": { "total": 0.000583 },
              "no-case-declarations": { "total": 0.000291 },
              "no-compare-neg-zero": { "total": 0.002251 },
              "no-cond-assign": { "total": 0.001751 },
              "no-constant-binary-expression": {
                "total": 0.0036260000000000003
              },
              "no-constant-condition": { "total": 0.004124 },
              "no-control-regex": { "total": 0.0023350000000000007 },
              "no-debugger": { "total": 0.000417 },
              "no-delete-var": { "total": 0.000375 },
              "no-dupe-else-if": { "total": 0.00175 },
              "no-duplicate-case": { "total": 0.000416 },
              "no-empty": { "total": 0.001376 },
              "no-empty-character-class": { "total": 0.00025 },
              "no-empty-pattern": { "total": 0.000959 },
              "no-empty-static-block": { "total": 0.000375 },
              "no-ex-assign": { "total": 0.000292 },
              "no-extra-boolean-cast": { "total": 0.00225 },
              "no-fallthrough": { "total": 0.008293 },
              "no-global-assign": { "total": 0.01975 },
              "no-invalid-regexp": { "total": 0.001666 },
              "no-irregular-whitespace": { "total": 0.0036249999999999998 },
              "no-loss-of-precision": { "total": 0.007959 },
              "no-misleading-character-class": {
                "total": 0.011000000000000001
              },
              "no-nonoctal-decimal-escape": { "total": 0.002 },
              "no-octal": { "total": 0.0020420000000000004 },
              "no-prototype-builtins": { "total": 0.002001 },
              "no-regex-spaces": { "total": 0.005459 },
              "no-self-assign": { "total": 0.000625 },
              "no-shadow-restricted-names": { "total": 0.004249 },
              "no-sparse-arrays": { "total": 0.001167 },
              "no-unsafe-finally": { "total": 0.001541 },
              "no-unsafe-optional-chaining": { "total": 0.005750999999999999 },
              "no-unused-labels": { "total": 0.000458 },
              "no-unused-private-class-members": { "total": 0.000417 },
              "no-useless-backreference": { "total": 0.0033759999999999997 },
              "no-useless-catch": { "total": 0.00025 },
              "no-useless-escape": { "total": 0.003917 },
              "require-yield": { "total": 0.0007909999999999999 },
              "use-isnan": { "total": 0.0032920000000000002 },
              "valid-typeof": { "total": 0.001625 },
              "no-var": { "total": 0.001209 },
              "prefer-const": { "total": 0.0023340000000000006 },
              "prefer-rest-params": { "total": 0.001709 },
              "prefer-spread": { "total": 0.0014990000000000001 },
              "@typescript-eslint/ban-ts-comment": {
                "total": 0.011000000000000001
              },
              "@typescript-eslint/no-array-constructor": { "total": 0.002749 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.0015
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.004208 },
              "@typescript-eslint/no-explicit-any": { "total": 0.003167 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001291
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001291 },
              "@typescript-eslint/no-namespace": { "total": 0.002334 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001042
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.00475
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001417
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.001875
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.010832999999999999
              },
              "@typescript-eslint/no-unused-vars": { "total": 0.436625 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.002208
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.002 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.001208
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.007125
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001083 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.006082999999999999
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.013208999999999999
              },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.008124000000000001
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.001959 },
              "@nx/enforce-module-boundaries": { "total": 0.034041 }
            },
            "fix": { "total": 0 },
            "total": 2.615
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/stats/filter.unit.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 1.455875 },
            "rules": {
              "for-direction": { "total": 0.007625 },
              "no-async-promise-executor": { "total": 0.000625 },
              "no-case-declarations": { "total": 0.000334 },
              "no-compare-neg-zero": { "total": 0.0031249999999999997 },
              "no-cond-assign": { "total": 0.001208 },
              "no-constant-binary-expression": { "total": 0.012626 },
              "no-constant-condition": { "total": 0.00125 },
              "no-control-regex": { "total": 0.009416 },
              "no-debugger": { "total": 0.000333 },
              "no-delete-var": { "total": 0.000333 },
              "no-dupe-else-if": { "total": 0.000458 },
              "no-duplicate-case": { "total": 0.000417 },
              "no-empty": { "total": 0.001875 },
              "no-empty-character-class": { "total": 0.000458 },
              "no-empty-pattern": { "total": 0.000584 },
              "no-empty-static-block": { "total": 0.000291 },
              "no-ex-assign": { "total": 0.000333 },
              "no-extra-boolean-cast": { "total": 0.011374 },
              "no-fallthrough": { "total": 0.011458999999999999 },
              "no-global-assign": { "total": 0.021750000000000002 },
              "no-invalid-regexp": { "total": 0.005416 },
              "no-irregular-whitespace": { "total": 0.005582999999999999 },
              "no-loss-of-precision": { "total": 0.07316600000000004 },
              "no-misleading-character-class": {
                "total": 0.014166999999999999
              },
              "no-nonoctal-decimal-escape": { "total": 0.009294000000000004 },
              "no-octal": { "total": 0.007834 },
              "no-prototype-builtins": { "total": 0.007 },
              "no-regex-spaces": { "total": 0.03375200000000002 },
              "no-self-assign": { "total": 0.000875 },
              "no-shadow-restricted-names": { "total": 0.009667000000000002 },
              "no-sparse-arrays": { "total": 0.002499 },
              "no-unsafe-finally": { "total": 0.000375 },
              "no-unsafe-optional-chaining": { "total": 0.012834000000000002 },
              "no-unused-labels": { "total": 0.00075 },
              "no-unused-private-class-members": { "total": 0.000583 },
              "no-useless-backreference": { "total": 0.004293 },
              "no-useless-catch": { "total": 0.005167 },
              "no-useless-escape": { "total": 0.012125000000000006 },
              "require-yield": { "total": 0.000458 },
              "use-isnan": { "total": 0.008291 },
              "valid-typeof": { "total": 0.001542 },
              "no-var": { "total": 0.0019990000000000003 },
              "prefer-const": { "total": 0.0029590000000000003 },
              "prefer-rest-params": { "total": 0.000292 },
              "prefer-spread": { "total": 0.007126000000000002 },
              "@typescript-eslint/ban-ts-comment": {
                "total": 0.013333000000000001
              },
              "@typescript-eslint/no-array-constructor": { "total": 0.006292 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001125
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.004417 },
              "@typescript-eslint/no-explicit-any": { "total": 0.008208 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001208
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001041 },
              "@typescript-eslint/no-namespace": { "total": 0.002583 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002583 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.010167
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.00125
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.002416
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.022126000000000007
              },
              "@typescript-eslint/no-unused-vars": { "total": 0.42625 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.002083
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.0027500000000000007
              },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.006083
              },
              "@typescript-eslint/triple-slash-reference": { "total": 0.01029 },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.000916 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.009958
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.03708500000000001
              },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.008832999999999997
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.002208 },
              "@nx/enforce-module-boundaries": { "total": 0.07608400000000001 }
            },
            "fix": { "total": 0 },
            "total": 3.819291
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/stats/group.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 44,
        "column": 19,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 44,
        "endColumn": 39
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 75,
        "column": 19,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 75,
        "endColumn": 48
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 132,
        "column": 23,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 132,
        "endColumn": 45
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 154,
        "column": 23,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 154,
        "endColumn": 51
      },
      {
        "ruleId": null,
        "message": "Unused eslint-disable directive (no problems were reported from '@typescript-eslint/no-unused-vars').",
        "line": 177,
        "column": 5,
        "severity": 1,
        "nodeType": null,
        "fix": { "range": [4954, 5015], "text": " " }
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 5,
    "fixableErrorCount": 0,
    "fixableWarningCount": 1,
    "source": "import {\n  type DetailedRuleStat,\n  type TimeEntry,\n} from '../models/eslint-stats.schema';\n\nexport function updateGroupedStats(entry: TimeEntry, stat: DetailedRuleStat) {\n  const { timeMs, fixable, manuallyFixable, severity } = stat;\n\n  entry.timeMs += timeMs;\n  entry.fixable = entry.fixable || fixable;\n  entry.manuallyFixable = entry.manuallyFixable || manuallyFixable;\n\n  if (severity === 1) {\n    entry.warningCount = (entry.warningCount || 0) + 1;\n  }\n  if (severity === 2) {\n    entry.errorCount = (entry.errorCount || 0) + 1;\n  }\n}\n\n/**\n * Aggregates ESLint rule execution times from an array of linting results.\n *\n * @param {DetailedRuleStat[]} detailedStats - An array of DetailedRuleStat objects.\n * @returns {TimeEntry[]} An array of TimeEntry objects representing rule execution times.\n */\nexport function groupByRule(detailedStats: DetailedRuleStat[]): TimeEntry[] {\n  const ruleMap = new Map<string, TimeEntry>();\n\n  for (const stat of detailedStats) {\n    const { ruleId } = stat;\n\n    if (!ruleMap.has(ruleId)) {\n      ruleMap.set(ruleId, {\n        identifier: ruleId,\n        timeMs: 0,\n        warningCount: 0,\n        errorCount: 0,\n        fixable: false,\n        manuallyFixable: false,\n      });\n    }\n\n    const entry = ruleMap.get(ruleId)!;\n    updateGroupedStats(entry, stat);\n  }\n  return Array.from(ruleMap.values());\n}\n\nexport function groupByFile(detailedStats: DetailedRuleStat[]): TimeEntry[] {\n  const fileProblemMap = new Map<\n    string,\n    {\n      timeMs: number;\n      manuallyFixable: boolean;\n      problems: { fixable: boolean }[];\n      warningCount: number;\n      errorCount: number;\n    }\n  >();\n\n  for (const stat of detailedStats) {\n    const { filePath, timeMs, manuallyFixable, severity, fixable } = stat;\n\n    if (!fileProblemMap.has(filePath)) {\n      fileProblemMap.set(filePath, {\n        timeMs: 0,\n        manuallyFixable: false,\n        problems: [],\n        warningCount: 0,\n        errorCount: 0,\n      });\n    }\n\n    const entry = fileProblemMap.get(filePath)!;\n    entry.timeMs += timeMs;\n    entry.manuallyFixable = entry.manuallyFixable || manuallyFixable;\n\n    if (severity === 1) {\n      entry.warningCount++;\n      entry.problems.push({ fixable });\n    }\n    if (severity === 2) {\n      entry.errorCount++;\n      entry.problems.push({ fixable });\n    }\n  }\n\n  const results: TimeEntry[] = [];\n  for (const [filePath, aggregation] of fileProblemMap.entries()) {\n    results.push({\n      identifier: filePath,\n      timeMs: aggregation.timeMs,\n      manuallyFixable: aggregation.manuallyFixable,\n      warningCount: aggregation.warningCount,\n      errorCount: aggregation.errorCount,\n      fixable:\n        aggregation.problems.length > 0 &&\n        aggregation.problems.every((p) => p.fixable),\n    });\n  }\n\n  return results;\n}\n\n// New function for groupBy: 'file-rule'\nexport function groupByFileAndRule(\n  detailedStats: DetailedRuleStat[]\n): TimeEntry[] {\n  const fileMap = new Map<\n    string,\n    TimeEntry & { rules: Map<string, TimeEntry> }\n  >();\n\n  for (const stat of detailedStats) {\n    const { filePath, ruleId, timeMs, fixable, manuallyFixable, severity } =\n      stat;\n\n    if (!fileMap.has(filePath)) {\n      fileMap.set(filePath, {\n        identifier: filePath,\n        timeMs: 0,\n        children: [],\n        warningCount: 0,\n        errorCount: 0,\n        fixable: false,\n        manuallyFixable: false,\n        rules: new Map<string, TimeEntry>(),\n      });\n    }\n\n    const fileEntry = fileMap.get(filePath)!;\n    // Aggregate file-level stats\n    fileEntry.timeMs += timeMs;\n    fileEntry.manuallyFixable = fileEntry.manuallyFixable || manuallyFixable;\n    if (severity === 1) {\n      fileEntry.warningCount = (fileEntry.warningCount || 0) + 1;\n    }\n    if (severity === 2) {\n      fileEntry.errorCount = (fileEntry.errorCount || 0) + 1;\n    }\n\n    if (!fileEntry.rules.has(ruleId)) {\n      fileEntry.rules.set(ruleId, {\n        identifier: ruleId,\n        timeMs: 0,\n        warningCount: 0,\n        errorCount: 0,\n        fixable: false,\n        manuallyFixable: false,\n      });\n    }\n\n    const ruleEntry = fileEntry.rules.get(ruleId)!;\n    // Aggregate rule-level stats\n    ruleEntry.timeMs += timeMs;\n    ruleEntry.fixable = ruleEntry.fixable || fixable;\n    ruleEntry.manuallyFixable = ruleEntry.manuallyFixable || manuallyFixable;\n    if (severity === 1) {\n      ruleEntry.warningCount = (ruleEntry.warningCount || 0) + 1;\n    }\n    if (severity === 2) {\n      ruleEntry.errorCount = (ruleEntry.errorCount || 0) + 1;\n    }\n  }\n\n  // A file is fixable if all of its rules with errors/warnings are fixable.\n  for (const fileEntry of fileMap.values()) {\n    const rulesWithProblems = Array.from(fileEntry.rules.values()).filter(\n      (r) => r.warningCount > 0 || r.errorCount > 0\n    );\n    fileEntry.fixable =\n      rulesWithProblems.length > 0 && rulesWithProblems.every((r) => r.fixable);\n  }\n\n  return Array.from(fileMap.values()).map((fileEntry) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { rules, ...rest } = fileEntry;\n    return {\n      ...rest,\n      children: Array.from(rules.values()),\n    };\n  });\n}\n",
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 3.545833 },
            "rules": {
              "for-direction": { "total": 0.002834 },
              "no-async-promise-executor": { "total": 0.0005 },
              "no-case-declarations": { "total": 0.000334 },
              "no-compare-neg-zero": { "total": 0.009666000000000001 },
              "no-cond-assign": { "total": 0.0039570000000000004 },
              "no-constant-binary-expression": { "total": 0.03453800000000001 },
              "no-constant-condition": { "total": 0.013751999999999999 },
              "no-control-regex": { "total": 0.0073750000000000005 },
              "no-debugger": { "total": 0.00025 },
              "no-delete-var": { "total": 0.0009600000000000001 },
              "no-dupe-else-if": { "total": 0.006417 },
              "no-duplicate-case": { "total": 0.000375 },
              "no-empty": { "total": 0.0046240000000000005 },
              "no-empty-character-class": { "total": 0.000333 },
              "no-empty-pattern": { "total": 0.00246 },
              "no-empty-static-block": { "total": 0.000292 },
              "no-ex-assign": { "total": 0.000334 },
              "no-extra-boolean-cast": { "total": 0.006918999999999999 },
              "no-fallthrough": { "total": 0.03633700000000003 },
              "no-global-assign": { "total": 0.020667 },
              "no-invalid-regexp": { "total": 0.005957000000000001 },
              "no-irregular-whitespace": { "total": 0.010875 },
              "no-loss-of-precision": { "total": 0.040506000000000014 },
              "no-misleading-character-class": { "total": 0.012792 },
              "no-nonoctal-decimal-escape": { "total": 0.006458000000000001 },
              "no-octal": { "total": 0.007371000000000001 },
              "no-prototype-builtins": { "total": 0.009209000000000005 },
              "no-regex-spaces": { "total": 0.04859000000000003 },
              "no-self-assign": { "total": 0.016792 },
              "no-shadow-restricted-names": { "total": 0.013665 },
              "no-sparse-arrays": { "total": 0.001374 },
              "no-unsafe-finally": { "total": 0.004791 },
              "no-unsafe-optional-chaining": { "total": 0.03884400000000003 },
              "no-unused-labels": { "total": 0.000375 },
              "no-unused-private-class-members": { "total": 0.000375 },
              "no-useless-backreference": { "total": 0.003708 },
              "no-useless-catch": { "total": 0.000333 },
              "no-useless-escape": { "total": 0.009748000000000001 },
              "require-yield": { "total": 0.0019579999999999997 },
              "use-isnan": { "total": 0.009585999999999999 },
              "valid-typeof": { "total": 0.002957000000000001 },
              "no-var": { "total": 0.002958000000000001 },
              "prefer-const": { "total": 0.003957000000000001 },
              "prefer-rest-params": { "total": 0.003542 },
              "prefer-spread": { "total": 0.008709000000000003 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.016417 },
              "@typescript-eslint/no-array-constructor": { "total": 0.007792 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001125
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.004916 },
              "@typescript-eslint/no-explicit-any": { "total": 0.002875 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001125
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001083 },
              "@typescript-eslint/no-namespace": { "total": 0.002417 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.000917
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002042 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.005958
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001209
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.0037930000000000004
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.027041000000000013
              },
              "@typescript-eslint/no-unused-vars": { "total": 0.755042 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.004582
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.004496000000000001
              },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.000917
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.007418
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.053959 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.031503
              },
              "@typescript-eslint/no-empty-function": { "total": 0.044832 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.011623999999999999
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.001958 },
              "@nx/enforce-module-boundaries": { "total": 0.03920800000000001 }
            },
            "fix": { "total": 0 },
            "total": 8.686417
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/stats/group.unit.test.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 184,
        "column": 25,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 186,
        "endColumn": 7
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 215,
        "column": 25,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 217,
        "endColumn": 7
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 245,
        "column": 25,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 247,
        "endColumn": 7
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 274,
        "column": 25,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 276,
        "endColumn": 7
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 294,
        "column": 25,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 296,
        "endColumn": 7
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 5,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import { describe, it, expect } from 'vitest';\nimport { groupByRule, groupByFileAndRule } from './group';\nimport { type DetailedRuleStat } from '../models/eslint-stats.schema';\n\ndescribe('groupByRule', () => {\n  it('should return empty array for empty stats', () => {\n    const detailedStats: DetailedRuleStat[] = [];\n    const aggregated = groupByRule(detailedStats);\n    expect(aggregated).toEqual([]);\n  });\n\n  it('should aggregate stats by rule ID', () => {\n    const detailedStats: DetailedRuleStat[] = [\n      {\n        ruleId: 'rule-a',\n        timeMs: 100,\n        filePath: 'file1.js',\n        fixable: true,\n        manuallyFixable: false,\n        severity: 2,\n        isTestFile: false,\n      },\n      {\n        ruleId: 'rule-b',\n        timeMs: 50,\n        filePath: 'file1.js',\n        fixable: false,\n        manuallyFixable: true,\n        severity: 1,\n        isTestFile: false,\n      },\n      {\n        ruleId: 'rule-a',\n        timeMs: 20,\n        filePath: 'file2.js',\n        fixable: true,\n        manuallyFixable: false,\n        severity: 2,\n        isTestFile: true,\n      },\n    ];\n    const aggregated = groupByRule(detailedStats);\n    expect(aggregated).toEqual(\n      expect.arrayContaining([\n        expect.objectContaining({\n          identifier: 'rule-a',\n          timeMs: 120,\n          fixable: true,\n          manuallyFixable: false,\n          severities: ['error'],\n          occurredInTestFiles: true,\n          occurredInNonTestFiles: true,\n        }),\n        expect.objectContaining({\n          identifier: 'rule-b',\n          timeMs: 50,\n          fixable: false,\n          manuallyFixable: true,\n          severities: ['warning'],\n          occurredInTestFiles: false,\n          occurredInNonTestFiles: true,\n        }),\n      ])\n    );\n  });\n\n  it('should handle entries with severity 0', () => {\n    const detailedStats: DetailedRuleStat[] = [\n      {\n        ruleId: 'rule-a',\n        timeMs: 100,\n        filePath: 'file1.js',\n        fixable: true,\n        manuallyFixable: true,\n        severity: 0,\n        isTestFile: false,\n      },\n    ];\n    const aggregated = groupByRule(detailedStats);\n    expect(aggregated).toEqual(\n      expect.arrayContaining([\n        expect.objectContaining({\n          identifier: 'rule-a',\n          timeMs: 100,\n          severities: [],\n        }),\n      ])\n    );\n  });\n\n  it('should correctly update fixable and manuallyFixable flags', () => {\n    const detailedStats: DetailedRuleStat[] = [\n      {\n        ruleId: 'rule-a',\n        timeMs: 10,\n        filePath: 'file1.js',\n        fixable: true,\n        manuallyFixable: true,\n        severity: 2,\n        isTestFile: false,\n      },\n      {\n        ruleId: 'rule-a',\n        timeMs: 20,\n        filePath: 'file2.js',\n        fixable: false,\n        manuallyFixable: true,\n        severity: 2,\n        isTestFile: false,\n      },\n      {\n        ruleId: 'rule-b',\n        timeMs: 30,\n        filePath: 'file1.js',\n        fixable: true,\n        manuallyFixable: false,\n        severity: 1,\n        isTestFile: false,\n      },\n    ];\n    const aggregated = groupByRule(detailedStats);\n    expect(aggregated).toEqual(\n      expect.arrayContaining([\n        expect.objectContaining({\n          identifier: 'rule-a',\n          fixable: false,\n          manuallyFixable: true,\n        }),\n        expect.objectContaining({\n          identifier: 'rule-b',\n          fixable: true,\n          manuallyFixable: false,\n        }),\n      ])\n    );\n  });\n});\n\ndescribe('groupByFileAndRule', () => {\n  it('should group by file and then by rule', () => {\n    const detailedStats: DetailedRuleStat[] = [\n      {\n        filePath: 'path/to/file1.ts',\n        ruleId: 'rule1',\n        timeMs: 10,\n        severity: 2,\n        fixable: true,\n        manuallyFixable: false,\n        isTestFile: false,\n      },\n      {\n        filePath: 'path/to/file1.ts',\n        ruleId: 'rule2',\n        timeMs: 20,\n        severity: 1,\n        fixable: false,\n        manuallyFixable: true,\n        isTestFile: false,\n      },\n      {\n        filePath: 'path/to/file2.ts',\n        ruleId: 'rule1',\n        timeMs: 5,\n        severity: 2,\n        fixable: true,\n        manuallyFixable: false,\n        isTestFile: false,\n      },\n      {\n        filePath: 'path/to/file1.ts',\n        ruleId: 'rule1',\n        timeMs: 15,\n        severity: 2,\n        fixable: true,\n        manuallyFixable: false,\n        isTestFile: false,\n      },\n    ];\n\n    const result = groupByFileAndRule(detailedStats);\n\n    expect(result).toHaveLength(2);\n\n    const file1Result = result.find(\n      (r) => r.identifier === 'path/to/file1.ts'\n    )!;\n    expect(file1Result).toBeDefined();\n    expect(file1Result.timeMs).toBe(45);\n    expect(file1Result.warningCount).toBe(1);\n    expect(file1Result.errorCount).toBe(2);\n    expect(file1Result.manuallyFixable).toBe(true);\n\n    expect(file1Result.children).toHaveLength(2);\n\n    const file1Rule1 = file1Result.children?.find(\n      (r) => r.identifier === 'rule1'\n    );\n    expect(file1Rule1).toBeDefined();\n    expect(file1Rule1?.timeMs).toBe(25);\n    expect(file1Rule1?.errorCount).toBe(2);\n    expect(file1Rule1?.warningCount).toBe(0);\n    expect(file1Rule1?.fixable).toBe(true);\n    expect(file1Rule1?.manuallyFixable).toBe(false);\n\n    const file1Rule2 = file1Result.children?.find(\n      (r) => r.identifier === 'rule2'\n    );\n    expect(file1Rule2).toBeDefined();\n    expect(file1Rule2?.timeMs).toBe(20);\n    expect(file1Rule2?.errorCount).toBe(0);\n    expect(file1Rule2?.warningCount).toBe(1);\n    expect(file1Rule2?.fixable).toBe(false);\n    expect(file1Rule2?.manuallyFixable).toBe(true);\n\n    const file2Result = result.find(\n      (r) => r.identifier === 'path/to/file2.ts'\n    )!;\n    expect(file2Result).toBeDefined();\n    expect(file2Result.timeMs).toBe(5);\n  });\n\n  it('file should be fixable if all problems are fixable', () => {\n    const detailedStats: DetailedRuleStat[] = [\n      {\n        filePath: 'path/to/file1.ts',\n        ruleId: 'rule1',\n        timeMs: 10,\n        severity: 2,\n        fixable: true,\n        manuallyFixable: false,\n        isTestFile: false,\n      },\n      {\n        filePath: 'path/to/file1.ts',\n        ruleId: 'rule2',\n        timeMs: 20,\n        severity: 1,\n        fixable: true,\n        manuallyFixable: false,\n        isTestFile: false,\n      },\n    ];\n\n    const result = groupByFileAndRule(detailedStats);\n    const file1Result = result.find(\n      (r) => r.identifier === 'path/to/file1.ts'\n    )!;\n    expect(file1Result.fixable).toBe(true);\n  });\n\n  it('file should NOT be fixable if one of the problems is not fixable', () => {\n    const detailedStats: DetailedRuleStat[] = [\n      {\n        filePath: 'path/to/file1.ts',\n        ruleId: 'rule1',\n        timeMs: 10,\n        severity: 2,\n        fixable: true,\n        manuallyFixable: false,\n        isTestFile: false,\n      },\n      {\n        filePath: 'path/to/file1.ts',\n        ruleId: 'rule2',\n        timeMs: 20,\n        severity: 1,\n        fixable: false,\n        manuallyFixable: false,\n        isTestFile: false,\n      },\n    ];\n\n    const result = groupByFileAndRule(detailedStats);\n    const file1Result = result.find(\n      (r) => r.identifier === 'path/to/file1.ts'\n    )!;\n    expect(file1Result.fixable).toBe(false);\n  });\n\n  it('file should NOT be fixable if it has no problems', () => {\n    const detailedStats: DetailedRuleStat[] = [\n      {\n        filePath: 'path/to/file1.ts',\n        ruleId: 'rule1',\n        timeMs: 10,\n        severity: 0,\n        fixable: true,\n        manuallyFixable: false,\n        isTestFile: false,\n      },\n    ];\n\n    const result = groupByFileAndRule(detailedStats);\n    const file1Result = result.find(\n      (r) => r.identifier === 'path/to/file1.ts'\n    )!;\n    expect(file1Result.fixable).toBe(false);\n  });\n});\n",
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 3.399334 },
            "rules": {
              "for-direction": { "total": 0.00275 },
              "no-async-promise-executor": { "total": 0.000417 },
              "no-case-declarations": { "total": 0.00025 },
              "no-compare-neg-zero": { "total": 0.006374 },
              "no-cond-assign": { "total": 0.00125 },
              "no-constant-binary-expression": {
                "total": 0.006750999999999999
              },
              "no-constant-condition": { "total": 0.001292 },
              "no-control-regex": { "total": 0.02854200000000002 },
              "no-debugger": { "total": 0.000292 },
              "no-delete-var": { "total": 0.000334 },
              "no-dupe-else-if": { "total": 0.000416 },
              "no-duplicate-case": { "total": 0.000375 },
              "no-empty": { "total": 0.0024170000000000003 },
              "no-empty-character-class": { "total": 0.00025 },
              "no-empty-pattern": { "total": 0.000458 },
              "no-empty-static-block": { "total": 0.000375 },
              "no-ex-assign": { "total": 0.000375 },
              "no-extra-boolean-cast": { "total": 0.014001000000000005 },
              "no-fallthrough": { "total": 0.022743000000000006 },
              "no-global-assign": { "total": 0.018584 },
              "no-invalid-regexp": { "total": 0.014085000000000009 },
              "no-irregular-whitespace": { "total": 0.01225 },
              "no-loss-of-precision": { "total": 0.09841200000000005 },
              "no-misleading-character-class": { "total": 0.014042 },
              "no-nonoctal-decimal-escape": { "total": 0.02449600000000001 },
              "no-octal": { "total": 0.021376000000000013 },
              "no-prototype-builtins": { "total": 0.019127000000000016 },
              "no-regex-spaces": { "total": 0.07278200000000004 },
              "no-self-assign": { "total": 0.000584 },
              "no-shadow-restricted-names": { "total": 0.018334 },
              "no-sparse-arrays": { "total": 0.004292 },
              "no-unsafe-finally": { "total": 0.0005 },
              "no-unsafe-optional-chaining": { "total": 0.03254500000000002 },
              "no-unused-labels": { "total": 0.000583 },
              "no-unused-private-class-members": { "total": 0.000333 },
              "no-useless-backreference": { "total": 0.0036669999999999997 },
              "no-useless-catch": { "total": 0.00025 },
              "no-useless-escape": { "total": 0.03129100000000002 },
              "require-yield": { "total": 0.000542 },
              "use-isnan": { "total": 0.004958 },
              "valid-typeof": { "total": 0.001625 },
              "no-var": { "total": 0.003458000000000001 },
              "prefer-const": { "total": 0.004125000000000001 },
              "prefer-rest-params": { "total": 0.000459 },
              "prefer-spread": { "total": 0.02100500000000001 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.010541 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.013666000000000006
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001083
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.003958 },
              "@typescript-eslint/no-explicit-any": { "total": 0.00325 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.000916
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001042 },
              "@typescript-eslint/no-namespace": { "total": 0.0025 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002542 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.009083
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.00175
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.0031680000000000002
              },
              "@typescript-eslint/no-unused-expressions": {
                "total": 0.032167000000000015
              },
              "@typescript-eslint/no-unused-vars": { "total": 0.587166 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.003752
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.0058319999999999995
              },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.001125
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.008876
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.052959 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.019625000000000004
              },
              "@typescript-eslint/no-empty-function": { "total": 0.069583 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.013959000000000004
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.002042 },
              "@nx/enforce-module-boundaries": { "total": 0.062125999999999994 }
            },
            "fix": { "total": 0 },
            "total": 8.644625
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/stats/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 0.32075 },
            "rules": {
              "for-direction": { "total": 0.00175 },
              "no-async-promise-executor": { "total": 0.000292 },
              "no-case-declarations": { "total": 0.00025 },
              "no-compare-neg-zero": { "total": 0.000792 },
              "no-cond-assign": { "total": 0.00075 },
              "no-constant-binary-expression": { "total": 0.000291 },
              "no-constant-condition": { "total": 0.000875 },
              "no-control-regex": { "total": 0.001334 },
              "no-debugger": { "total": 0.000208 },
              "no-delete-var": { "total": 0.000209 },
              "no-dupe-else-if": { "total": 0.000375 },
              "no-duplicate-case": { "total": 0.000334 },
              "no-empty": { "total": 0.0005 },
              "no-empty-character-class": { "total": 0.000208 },
              "no-empty-pattern": { "total": 0.000459 },
              "no-empty-static-block": { "total": 0.00025 },
              "no-ex-assign": { "total": 0.000292 },
              "no-extra-boolean-cast": { "total": 0.001042 },
              "no-fallthrough": { "total": 0.002459 },
              "no-global-assign": { "total": 0.018708 },
              "no-invalid-regexp": { "total": 0.000584 },
              "no-irregular-whitespace": { "total": 0.001542 },
              "no-loss-of-precision": { "total": 0.001209 },
              "no-misleading-character-class": { "total": 0.00825 },
              "no-nonoctal-decimal-escape": { "total": 0.001291 },
              "no-octal": { "total": 0.000834 },
              "no-prototype-builtins": { "total": 0.000458 },
              "no-regex-spaces": { "total": 0.0010840000000000001 },
              "no-self-assign": { "total": 0.0005 },
              "no-shadow-restricted-names": { "total": 0.000834 },
              "no-sparse-arrays": { "total": 0.00025 },
              "no-unsafe-finally": { "total": 0.00025 },
              "no-unsafe-optional-chaining": { "total": 0.000833 },
              "no-unused-labels": { "total": 0.000375 },
              "no-unused-private-class-members": { "total": 0.000375 },
              "no-useless-backreference": { "total": 0.003208 },
              "no-useless-catch": { "total": 0.000208 },
              "no-useless-escape": { "total": 0.0030419999999999996 },
              "require-yield": { "total": 0.000375 },
              "use-isnan": { "total": 0.000958 },
              "valid-typeof": { "total": 0.001291 },
              "no-var": { "total": 0.00025 },
              "prefer-const": { "total": 0.0012079999999999999 },
              "prefer-rest-params": { "total": 0.000292 },
              "prefer-spread": { "total": 0.000292 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.006291 },
              "@typescript-eslint/no-array-constructor": { "total": 0.001291 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.000875
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.00275 },
              "@typescript-eslint/no-explicit-any": { "total": 0.001958 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.000875
              },
              "@typescript-eslint/no-misused-new": { "total": 0.000833 },
              "@typescript-eslint/no-namespace": { "total": 0.001792 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.000875
              },
              "@typescript-eslint/no-this-alias": { "total": 0.00175 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.003375
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.000875
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.000833
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.007042 },
              "@typescript-eslint/no-unused-vars": { "total": 1.768625 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.001125
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.000875 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.00075
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.004292000000000001
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.000791 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.001958
              },
              "@typescript-eslint/no-empty-function": { "total": 0.003542 },
              "@typescript-eslint/no-inferrable-types": { "total": 0.003417 },
              "@typescript-eslint/no-empty-interface": { "total": 0.001583 },
              "@nx/enforce-module-boundaries": { "total": 0.237541 }
            },
            "fix": { "total": 0 },
            "total": 3.225083
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/stats/load.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 0.997333 },
            "rules": {
              "for-direction": { "total": 0.002208 },
              "no-async-promise-executor": { "total": 0.000334 },
              "no-case-declarations": { "total": 0.000291 },
              "no-compare-neg-zero": { "total": 0.0029180000000000005 },
              "no-cond-assign": { "total": 0.001417 },
              "no-constant-binary-expression": {
                "total": 0.0066679999999999994
              },
              "no-constant-condition": { "total": 0.005043000000000001 },
              "no-control-regex": { "total": 0.002 },
              "no-debugger": { "total": 0.000292 },
              "no-delete-var": { "total": 0.000374 },
              "no-dupe-else-if": { "total": 0.003875 },
              "no-duplicate-case": { "total": 0.000291 },
              "no-empty": { "total": 0.0015830000000000002 },
              "no-empty-character-class": { "total": 0.000208 },
              "no-empty-pattern": { "total": 0.0005 },
              "no-empty-static-block": { "total": 0.000292 },
              "no-ex-assign": { "total": 0.00275 },
              "no-extra-boolean-cast": { "total": 0.0025 },
              "no-fallthrough": { "total": 0.009793000000000001 },
              "no-global-assign": { "total": 0.020667 },
              "no-invalid-regexp": { "total": 0.002 },
              "no-irregular-whitespace": { "total": 0.003625 },
              "no-loss-of-precision": { "total": 0.001543 },
              "no-misleading-character-class": { "total": 0.01025 },
              "no-nonoctal-decimal-escape": { "total": 0.0016250000000000001 },
              "no-octal": { "total": 0.001083 },
              "no-prototype-builtins": { "total": 0.0024600000000000004 },
              "no-regex-spaces": { "total": 0.008207999999999998 },
              "no-self-assign": { "total": 0.001666 },
              "no-shadow-restricted-names": { "total": 0.004541 },
              "no-sparse-arrays": { "total": 0.000666 },
              "no-unsafe-finally": { "total": 0.005167 },
              "no-unsafe-optional-chaining": { "total": 0.009078000000000001 },
              "no-unused-labels": { "total": 0.000458 },
              "no-unused-private-class-members": { "total": 0.000375 },
              "no-useless-backreference": { "total": 0.003416 },
              "no-useless-catch": { "total": 0.000916 },
              "no-useless-escape": { "total": 0.007669 },
              "require-yield": { "total": 0.000833 },
              "use-isnan": { "total": 0.002707 },
              "valid-typeof": { "total": 0.001917 },
              "no-var": { "total": 0.000875 },
              "prefer-const": { "total": 0.007334 },
              "prefer-rest-params": { "total": 0.001208 },
              "prefer-spread": { "total": 0.0019169999999999999 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.008208 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.0033740000000000003
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001041
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.005125 },
              "@typescript-eslint/no-explicit-any": { "total": 0.003167 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001292
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001291 },
              "@typescript-eslint/no-namespace": { "total": 0.002125 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.000917
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002208 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.004375
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001041
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.0016660000000000002
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.009791 },
              "@typescript-eslint/no-unused-vars": { "total": 0.39675 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.001834
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.002001 },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.000792
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.005959
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.000917 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.008539999999999999
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.013583999999999999
              },
              "@typescript-eslint/no-inferrable-types": { "total": 0.006291 },
              "@typescript-eslint/no-empty-interface": { "total": 0.001833 },
              "@nx/enforce-module-boundaries": { "total": 0.043834 }
            },
            "fix": { "total": 0 },
            "total": 2.747167
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/stats/sort.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 1.553917 },
            "rules": {
              "for-direction": { "total": 0.002708 },
              "no-async-promise-executor": { "total": 0.0005 },
              "no-case-declarations": { "total": 0.0041670000000000006 },
              "no-compare-neg-zero": { "total": 0.004375 },
              "no-cond-assign": { "total": 0.002667 },
              "no-constant-binary-expression": {
                "total": 0.015373000000000001
              },
              "no-constant-condition": { "total": 0.00875 },
              "no-control-regex": { "total": 0.006503999999999999 },
              "no-debugger": { "total": 0.000334 },
              "no-delete-var": { "total": 0.000708 },
              "no-dupe-else-if": { "total": 0.005168 },
              "no-duplicate-case": { "total": 0.009875 },
              "no-empty": { "total": 0.002582 },
              "no-empty-character-class": { "total": 0.000292 },
              "no-empty-pattern": { "total": 0.0009579999999999999 },
              "no-empty-static-block": { "total": 0.00025 },
              "no-ex-assign": { "total": 0.000334 },
              "no-extra-boolean-cast": { "total": 0.003042 },
              "no-fallthrough": { "total": 0.04674700000000002 },
              "no-global-assign": { "total": 0.021208 },
              "no-invalid-regexp": { "total": 0.001833 },
              "no-irregular-whitespace": { "total": 0.0058330000000000005 },
              "no-loss-of-precision": { "total": 0.014707000000000001 },
              "no-misleading-character-class": { "total": 0.011792 },
              "no-nonoctal-decimal-escape": { "total": 0.0059960000000000005 },
              "no-octal": { "total": 0.005248 },
              "no-prototype-builtins": { "total": 0.002168 },
              "no-regex-spaces": { "total": 0.010081999999999999 },
              "no-self-assign": { "total": 0.007082 },
              "no-shadow-restricted-names": { "total": 0.0056240000000000005 },
              "no-sparse-arrays": { "total": 0.001124 },
              "no-unsafe-finally": { "total": 0.009666 },
              "no-unsafe-optional-chaining": { "total": 0.012083000000000005 },
              "no-unused-labels": { "total": 0.0011660000000000002 },
              "no-unused-private-class-members": { "total": 0.000417 },
              "no-useless-backreference": { "total": 0.067916 },
              "no-useless-catch": { "total": 0.00025 },
              "no-useless-escape": { "total": 0.009166999999999998 },
              "require-yield": { "total": 0.0008749999999999999 },
              "use-isnan": { "total": 0.006085 },
              "valid-typeof": { "total": 0.002209 },
              "no-var": { "total": 0.0012500000000000002 },
              "prefer-const": { "total": 0.008543 },
              "prefer-rest-params": { "total": 0.001167 },
              "prefer-spread": { "total": 0.001665 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.01475 },
              "@typescript-eslint/no-array-constructor": { "total": 0.002956 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001125
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.004541 },
              "@typescript-eslint/no-explicit-any": { "total": 0.023542 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001583
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001083 },
              "@typescript-eslint/no-namespace": { "total": 0.002459 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001125
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002542 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.0055
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001166
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.002918
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.014542 },
              "@typescript-eslint/no-unused-vars": { "total": 0.406708 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.0027930000000000003
              },
              "@typescript-eslint/prefer-as-const": { "total": 0.002207 },
              "@typescript-eslint/prefer-namespace-keyword": { "total": 0.001 },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.008166
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.013707
              },
              "@typescript-eslint/no-empty-function": { "total": 0.0245 },
              "@typescript-eslint/no-inferrable-types": { "total": 0.010541 },
              "@typescript-eslint/no-empty-interface": { "total": 0.002084 },
              "@nx/enforce-module-boundaries": { "total": 0.046 }
            },
            "fix": { "total": 0 },
            "total": 3.867959
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/src/lib/stats/sort.unit.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 1.948084 },
            "rules": {
              "for-direction": { "total": 0.002667 },
              "no-async-promise-executor": { "total": 0.000459 },
              "no-case-declarations": { "total": 0.000291 },
              "no-compare-neg-zero": { "total": 0.002166 },
              "no-cond-assign": { "total": 0.001084 },
              "no-constant-binary-expression": { "total": 0.002374 },
              "no-constant-condition": { "total": 0.001083 },
              "no-control-regex": { "total": 0.015167000000000009 },
              "no-debugger": { "total": 0.000208 },
              "no-delete-var": { "total": 0.000375 },
              "no-dupe-else-if": { "total": 0.000417 },
              "no-duplicate-case": { "total": 0.000292 },
              "no-empty": { "total": 0.0017080000000000003 },
              "no-empty-character-class": { "total": 0.000375 },
              "no-empty-pattern": { "total": 0.000458 },
              "no-empty-static-block": { "total": 0.000375 },
              "no-ex-assign": { "total": 0.000292 },
              "no-extra-boolean-cast": { "total": 0.007041000000000002 },
              "no-fallthrough": { "total": 0.014956000000000004 },
              "no-global-assign": { "total": 0.0185 },
              "no-invalid-regexp": { "total": 0.006583000000000003 },
              "no-irregular-whitespace": { "total": 0.0071660000000000005 },
              "no-loss-of-precision": { "total": 0.07645700000000004 },
              "no-misleading-character-class": { "total": 0.010083 },
              "no-nonoctal-decimal-escape": { "total": 0.012667000000000006 },
              "no-octal": { "total": 0.011453000000000001 },
              "no-prototype-builtins": { "total": 0.009084000000000002 },
              "no-regex-spaces": { "total": 0.039669000000000024 },
              "no-self-assign": { "total": 0.000542 },
              "no-shadow-restricted-names": { "total": 0.011456000000000001 },
              "no-sparse-arrays": { "total": 0.0026669999999999997 },
              "no-unsafe-finally": { "total": 0.000291 },
              "no-unsafe-optional-chaining": { "total": 0.014541000000000007 },
              "no-unused-labels": { "total": 0.000375 },
              "no-unused-private-class-members": { "total": 0.000375 },
              "no-useless-backreference": { "total": 0.007417 },
              "no-useless-catch": { "total": 0.000292 },
              "no-useless-escape": { "total": 0.018171000000000014 },
              "require-yield": { "total": 0.000333 },
              "use-isnan": { "total": 0.002125 },
              "valid-typeof": { "total": 0.0016259999999999998 },
              "no-var": { "total": 0.001958000000000001 },
              "prefer-const": { "total": 0.003082000000000001 },
              "prefer-rest-params": { "total": 0.000292 },
              "prefer-spread": { "total": 0.009083000000000003 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.009666 },
              "@typescript-eslint/no-array-constructor": { "total": 0.008834 },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.000916
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.003584 },
              "@typescript-eslint/no-explicit-any": { "total": 0.002542 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.00125
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001208 },
              "@typescript-eslint/no-namespace": { "total": 0.001875 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001084
              },
              "@typescript-eslint/no-this-alias": { "total": 0.001917 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.004417
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001167
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.001957
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.016872 },
              "@typescript-eslint/no-unused-vars": { "total": 1.773459 },
              "@typescript-eslint/no-wrapper-object-types": { "total": 0.003 },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.0034990000000000004
              },
              "@typescript-eslint/prefer-namespace-keyword": { "total": 0.001 },
              "@typescript-eslint/triple-slash-reference": { "total": 0.00675 },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.001042 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.011417
              },
              "@typescript-eslint/no-empty-function": {
                "total": 0.04396000000000001
              },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.010667000000000001
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.00175 },
              "@nx/enforce-module-boundaries": { "total": 0.289375 }
            },
            "fix": { "total": 0 },
            "total": 5.981667
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/tsconfig.json",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 0.879708 },
            "rules": { "@nx/dependency-checks": { "total": 0.024542 } },
            "fix": { "total": 0 },
            "total": 1.8485
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/tsconfig.lib.json",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 0.5015 },
            "rules": { "@nx/dependency-checks": { "total": 0.027917 } },
            "fix": { "total": 0 },
            "total": 1.440583
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/tsconfig.spec.json",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 0.293708 },
            "rules": { "@nx/dependency-checks": { "total": 0.015791 } },
            "fix": { "total": 0 },
            "total": 1.175208
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/michael_hladky/WebstormProjects/eslint/packages/eslint-stats/vite.config.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "stats": {
      "times": {
        "passes": [
          {
            "parse": { "total": 2.089167 },
            "rules": {
              "for-direction": { "total": 0.001958 },
              "no-async-promise-executor": { "total": 0.000458 },
              "no-case-declarations": { "total": 0.000334 },
              "no-compare-neg-zero": { "total": 0.003251 },
              "no-cond-assign": { "total": 0.001959 },
              "no-constant-binary-expression": {
                "total": 0.006958000000000001
              },
              "no-constant-condition": { "total": 0.003208 },
              "no-control-regex": { "total": 0.19074999999999998 },
              "no-debugger": { "total": 0.00025 },
              "no-delete-var": { "total": 0.000292 },
              "no-dupe-else-if": { "total": 0.000417 },
              "no-duplicate-case": { "total": 0.000375 },
              "no-empty": { "total": 0.0009580000000000001 },
              "no-empty-character-class": { "total": 0.001042 },
              "no-empty-pattern": { "total": 0.000667 },
              "no-empty-static-block": { "total": 0.000292 },
              "no-ex-assign": { "total": 0.000333 },
              "no-extra-boolean-cast": { "total": 0.0040820000000000006 },
              "no-fallthrough": { "total": 0.014417000000000006 },
              "no-global-assign": { "total": 0.0195 },
              "no-invalid-regexp": { "total": 0.0030400000000000006 },
              "no-irregular-whitespace": { "total": 0.005874000000000001 },
              "no-loss-of-precision": { "total": 0.009004000000000002 },
              "no-misleading-character-class": { "total": 0.048291 },
              "no-nonoctal-decimal-escape": { "total": 0.007499999999999999 },
              "no-octal": { "total": 0.004623000000000001 },
              "no-prototype-builtins": { "total": 0.008542 },
              "no-regex-spaces": { "total": 0.019330000000000007 },
              "no-self-assign": { "total": 0.000708 },
              "no-shadow-restricted-names": { "total": 0.009667000000000002 },
              "no-sparse-arrays": { "total": 0.002208 },
              "no-unsafe-finally": { "total": 0.002541 },
              "no-unsafe-optional-chaining": { "total": 0.008459999999999999 },
              "no-unused-labels": { "total": 0.000541 },
              "no-unused-private-class-members": { "total": 0.000375 },
              "no-useless-backreference": { "total": 0.038084 },
              "no-useless-catch": { "total": 0.000334 },
              "no-useless-escape": { "total": 0.097209 },
              "require-yield": { "total": 0.000375 },
              "use-isnan": { "total": 0.0031680000000000002 },
              "valid-typeof": { "total": 0.001416 },
              "no-var": { "total": 0.000792 },
              "prefer-const": { "total": 0.0019160000000000002 },
              "prefer-rest-params": { "total": 0.0005 },
              "prefer-spread": { "total": 0.004002 },
              "@typescript-eslint/ban-ts-comment": { "total": 0.011667 },
              "@typescript-eslint/no-array-constructor": {
                "total": 0.0039180000000000005
              },
              "@typescript-eslint/no-duplicate-enum-values": {
                "total": 0.001083
              },
              "@typescript-eslint/no-empty-object-type": { "total": 0.0035 },
              "@typescript-eslint/no-explicit-any": { "total": 0.002542 },
              "@typescript-eslint/no-extra-non-null-assertion": {
                "total": 0.001
              },
              "@typescript-eslint/no-misused-new": { "total": 0.001 },
              "@typescript-eslint/no-namespace": { "total": 0.002208 },
              "@typescript-eslint/no-non-null-asserted-optional-chain": {
                "total": 0.001083
              },
              "@typescript-eslint/no-this-alias": { "total": 0.002042 },
              "@typescript-eslint/no-unnecessary-type-constraint": {
                "total": 0.004875
              },
              "@typescript-eslint/no-unsafe-declaration-merging": {
                "total": 0.001083
              },
              "@typescript-eslint/no-unsafe-function-type": {
                "total": 0.002208
              },
              "@typescript-eslint/no-unused-expressions": { "total": 0.007917 },
              "@typescript-eslint/no-unused-vars": { "total": 1.907416 },
              "@typescript-eslint/no-wrapper-object-types": {
                "total": 0.0023329999999999996
              },
              "@typescript-eslint/prefer-as-const": {
                "total": 0.006457999999999999
              },
              "@typescript-eslint/prefer-namespace-keyword": {
                "total": 0.000833
              },
              "@typescript-eslint/triple-slash-reference": {
                "total": 0.066792
              },
              "@typescript-eslint/no-non-null-assertion": { "total": 0.000834 },
              "@typescript-eslint/adjacent-overload-signatures": {
                "total": 0.006458
              },
              "@typescript-eslint/no-empty-function": { "total": 0.031041 },
              "@typescript-eslint/no-inferrable-types": {
                "total": 0.005833999999999999
              },
              "@typescript-eslint/no-empty-interface": { "total": 0.002041 },
              "@nx/enforce-module-boundaries": { "total": 1.1093760000000001 }
            },
            "fix": { "total": 0 },
            "total": 7.109541
          }
        ]
      },
      "fixPasses": 0
    },
    "usedDeprecatedRules": [
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "replacedBy": ["@typescript-eslint/no-empty-object-type"],
        "info": {
          "deprecatedSince": "8.0.0",
          "replacedBy": [
            {
              "rule": {
                "name": "@typescript-eslint/no-empty-object-type",
                "url": "https://typescript-eslint.io/rules/no-empty-object-type"
              }
            }
          ],
          "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
        }
      }
    ]
  }
]
